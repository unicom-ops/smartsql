-- MySQL dump 10.13  Distrib 8.0.23, for Win64 (x86_64)
--
-- Host: localhost    Database: smart_sql
-- ------------------------------------------------------
-- Server version	8.0.23

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `audit_advice`
--

DROP TABLE IF EXISTS `audit_advice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `audit_advice` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `sql_id` int DEFAULT NULL COMMENT '对应sqlid',
  `content` varchar(1024) DEFAULT NULL COMMENT '建议内容',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='audit_advice 审核建议表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `audit_advice`
--

LOCK TABLES `audit_advice` WRITE;
/*!40000 ALTER TABLE `audit_advice` DISABLE KEYS */;
/*!40000 ALTER TABLE `audit_advice` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `audit_result`
--

DROP TABLE IF EXISTS `audit_result`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `audit_result` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `sql_id` int NOT NULL COMMENT '对应sql表的id 对应sqlid',
  `rule_id` int NOT NULL COMMENT '对应规则id 对应规则表id',
  `result_flag` tinyint NOT NULL COMMENT '审核结果表 是否匹配规则标志，0未匹配，1匹配',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间 创建时间',
  `advice` varchar(1024) DEFAULT NULL COMMENT '建议 针对该规则的建议',
  `score` decimal(32,10) NOT NULL DEFAULT '0.0000000000' COMMENT '得分',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=937 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='audit_result 审核结果表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `audit_result`
--

LOCK TABLES `audit_result` WRITE;
/*!40000 ALTER TABLE `audit_result` DISABLE KEYS */;
INSERT INTO `audit_result` VALUES (1,11,79,1,'2021-04-26 11:58:15','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(2,11,138,0,'2021-04-26 11:58:15','',0.0000000000),(3,11,107,0,'2021-04-26 11:58:15','',0.0000000000),(4,11,106,0,'2021-04-26 11:58:15','',0.0000000000),(5,11,76,0,'2021-04-26 11:58:15','',0.0000000000),(6,11,98,0,'2021-04-26 11:58:15','',0.0000000000),(7,11,96,0,'2021-04-26 11:58:15','',0.0000000000),(8,11,119,0,'2021-04-26 11:58:15','',0.0000000000),(9,11,118,0,'2021-04-26 11:58:15','',0.0000000000),(10,11,105,0,'2021-04-26 11:58:15','',0.0000000000),(11,11,120,0,'2021-04-26 11:58:15','',0.0000000000),(12,11,121,0,'2021-04-26 11:58:15','',0.0000000000),(13,11,80,0,'2021-04-26 11:58:15','',0.0000000000),(14,11,78,1,'2021-04-26 11:58:15','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(15,11,103,0,'2021-04-26 11:58:15','',0.0000000000),(16,11,73,0,'2021-04-26 11:58:15','',0.0000000000),(17,11,97,0,'2021-04-26 11:58:15','',0.0000000000),(18,11,95,0,'2021-04-26 11:58:15','',0.0000000000),(19,11,72,0,'2021-04-26 11:58:15','',0.0000000000),(20,11,81,0,'2021-04-26 11:58:15','',0.0000000000),(21,11,69,0,'2021-04-26 11:58:15','',0.0000000000),(22,11,75,0,'2021-04-26 11:58:15','',0.0000000000),(23,11,71,0,'2021-04-26 11:58:15','',0.0000000000),(24,11,70,0,'2021-04-26 11:58:15','',0.0000000000),(25,11,74,1,'2021-04-26 11:58:15','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(26,11,77,0,'2021-04-26 11:58:15','',0.0000000000),(27,12,79,1,'2021-04-26 16:16:27','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(28,12,138,0,'2021-04-26 16:16:27','',0.0000000000),(29,12,107,0,'2021-04-26 16:16:27','',0.0000000000),(30,12,106,0,'2021-04-26 16:16:27','',0.0000000000),(31,12,76,0,'2021-04-26 16:16:27','',0.0000000000),(32,12,98,0,'2021-04-26 16:16:27','',0.0000000000),(33,12,96,0,'2021-04-26 16:16:27','',0.0000000000),(34,12,119,0,'2021-04-26 16:16:27','',0.0000000000),(35,12,118,0,'2021-04-26 16:16:27','',0.0000000000),(36,12,105,0,'2021-04-26 16:16:27','',0.0000000000),(37,12,120,0,'2021-04-26 16:16:27','',0.0000000000),(38,12,121,0,'2021-04-26 16:16:27','',0.0000000000),(39,12,80,0,'2021-04-26 16:16:27','',0.0000000000),(40,12,78,1,'2021-04-26 16:16:27','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(41,12,103,0,'2021-04-26 16:16:27','',0.0000000000),(42,12,73,0,'2021-04-26 16:16:27','',0.0000000000),(43,12,97,0,'2021-04-26 16:16:27','',0.0000000000),(44,12,95,0,'2021-04-26 16:16:27','',0.0000000000),(45,12,72,0,'2021-04-26 16:16:27','',0.0000000000),(46,12,81,0,'2021-04-26 16:16:27','',0.0000000000),(47,12,69,0,'2021-04-26 16:16:27','',0.0000000000),(48,12,75,0,'2021-04-26 16:16:27','',0.0000000000),(49,12,71,0,'2021-04-26 16:16:27','',0.0000000000),(50,12,70,0,'2021-04-26 16:16:27','',0.0000000000),(51,12,74,1,'2021-04-26 16:16:27','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(52,12,77,0,'2021-04-26 16:16:27','',0.0000000000),(53,16,79,1,'2021-04-29 15:10:13','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(54,16,138,0,'2021-04-29 15:10:13','',0.0000000000),(55,16,107,0,'2021-04-29 15:10:13','',0.0000000000),(56,16,106,0,'2021-04-29 15:10:13','',0.0000000000),(57,16,76,0,'2021-04-29 15:10:13','',0.0000000000),(58,16,98,0,'2021-04-29 15:10:13','',0.0000000000),(59,16,96,0,'2021-04-29 15:10:13','',0.0000000000),(60,16,119,0,'2021-04-29 15:10:13','',0.0000000000),(61,16,118,0,'2021-04-29 15:10:13','',0.0000000000),(62,16,105,0,'2021-04-29 15:10:13','',0.0000000000),(63,16,120,0,'2021-04-29 15:10:13','',0.0000000000),(64,16,121,0,'2021-04-29 15:10:13','',0.0000000000),(65,16,80,0,'2021-04-29 15:10:13','',0.0000000000),(66,16,78,1,'2021-04-29 15:10:13','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(67,16,103,0,'2021-04-29 15:10:13','',0.0000000000),(68,16,73,0,'2021-04-29 15:10:13','',0.0000000000),(69,16,97,0,'2021-04-29 15:10:13','',0.0000000000),(70,16,95,0,'2021-04-29 15:10:13','',0.0000000000),(71,16,72,0,'2021-04-29 15:10:13','',0.0000000000),(72,16,81,0,'2021-04-29 15:10:13','',0.0000000000),(73,16,69,0,'2021-04-29 15:10:13','',0.0000000000),(74,16,75,0,'2021-04-29 15:10:13','',0.0000000000),(75,16,71,0,'2021-04-29 15:10:13','',0.0000000000),(76,16,70,0,'2021-04-29 15:10:13','',0.0000000000),(77,16,74,1,'2021-04-29 15:10:13','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(78,16,77,0,'2021-04-29 15:10:13','',0.0000000000),(79,17,79,1,'2021-04-29 15:10:43','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(80,17,138,0,'2021-04-29 15:10:43','',0.0000000000),(81,17,107,0,'2021-04-29 15:10:43','',0.0000000000),(82,17,106,0,'2021-04-29 15:10:43','',0.0000000000),(83,17,76,0,'2021-04-29 15:10:43','',0.0000000000),(84,17,98,0,'2021-04-29 15:10:43','',0.0000000000),(85,17,96,0,'2021-04-29 15:10:43','',0.0000000000),(86,17,119,0,'2021-04-29 15:10:43','',0.0000000000),(87,17,118,0,'2021-04-29 15:10:43','',0.0000000000),(88,17,105,0,'2021-04-29 15:10:43','',0.0000000000),(89,17,120,0,'2021-04-29 15:10:43','',0.0000000000),(90,17,121,0,'2021-04-29 15:10:43','',0.0000000000),(91,17,80,0,'2021-04-29 15:10:43','',0.0000000000),(92,17,78,1,'2021-04-29 15:10:43','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(93,17,103,0,'2021-04-29 15:10:43','',0.0000000000),(94,17,73,0,'2021-04-29 15:10:43','',0.0000000000),(95,17,97,0,'2021-04-29 15:10:43','',0.0000000000),(96,17,95,0,'2021-04-29 15:10:43','',0.0000000000),(97,17,72,0,'2021-04-29 15:10:43','',0.0000000000),(98,17,81,0,'2021-04-29 15:10:43','',0.0000000000),(99,17,69,0,'2021-04-29 15:10:43','',0.0000000000),(100,17,75,0,'2021-04-29 15:10:43','',0.0000000000),(101,17,71,0,'2021-04-29 15:10:43','',0.0000000000),(102,17,70,0,'2021-04-29 15:10:43','',0.0000000000),(103,17,74,1,'2021-04-29 15:10:43','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(104,17,77,0,'2021-04-29 15:10:43','',0.0000000000),(105,18,79,1,'2021-04-29 15:13:34','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(106,18,138,0,'2021-04-29 15:13:34','',0.0000000000),(107,18,107,0,'2021-04-29 15:13:34','',0.0000000000),(108,18,106,0,'2021-04-29 15:13:34','',0.0000000000),(109,18,76,0,'2021-04-29 15:13:34','',0.0000000000),(110,18,98,0,'2021-04-29 15:13:34','',0.0000000000),(111,18,96,0,'2021-04-29 15:13:34','',0.0000000000),(112,18,119,0,'2021-04-29 15:13:34','',0.0000000000),(113,18,118,0,'2021-04-29 15:13:34','',0.0000000000),(114,18,105,0,'2021-04-29 15:13:34','',0.0000000000),(115,18,120,0,'2021-04-29 15:13:34','',0.0000000000),(116,18,121,0,'2021-04-29 15:13:34','',0.0000000000),(117,18,80,0,'2021-04-29 15:13:34','',0.0000000000),(118,18,78,1,'2021-04-29 15:13:34','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(119,18,103,0,'2021-04-29 15:13:34','',0.0000000000),(120,18,73,0,'2021-04-29 15:13:34','',0.0000000000),(121,18,97,0,'2021-04-29 15:13:34','',0.0000000000),(122,18,95,0,'2021-04-29 15:13:34','',0.0000000000),(123,18,72,0,'2021-04-29 15:13:34','',0.0000000000),(124,18,81,0,'2021-04-29 15:13:34','',0.0000000000),(125,18,69,0,'2021-04-29 15:13:34','',0.0000000000),(126,18,75,0,'2021-04-29 15:13:34','',0.0000000000),(127,18,71,0,'2021-04-29 15:13:34','',0.0000000000),(128,18,70,0,'2021-04-29 15:13:34','',0.0000000000),(129,18,74,1,'2021-04-29 15:13:34','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(130,18,77,0,'2021-04-29 15:13:34','',0.0000000000),(131,19,79,1,'2021-04-29 15:17:29','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(132,19,138,0,'2021-04-29 15:17:29','',0.0000000000),(133,19,107,0,'2021-04-29 15:17:29','',0.0000000000),(134,19,106,0,'2021-04-29 15:17:29','',0.0000000000),(135,19,76,0,'2021-04-29 15:17:29','',0.0000000000),(136,19,98,0,'2021-04-29 15:17:29','',0.0000000000),(137,19,96,0,'2021-04-29 15:17:29','',0.0000000000),(138,19,119,0,'2021-04-29 15:17:29','',0.0000000000),(139,19,118,0,'2021-04-29 15:17:29','',0.0000000000),(140,19,105,0,'2021-04-29 15:17:29','',0.0000000000),(141,19,120,0,'2021-04-29 15:17:29','',0.0000000000),(142,19,121,0,'2021-04-29 15:17:29','',0.0000000000),(143,19,80,0,'2021-04-29 15:17:29','',0.0000000000),(144,19,78,1,'2021-04-29 15:17:29','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(145,19,103,0,'2021-04-29 15:17:29','',0.0000000000),(146,19,73,0,'2021-04-29 15:17:29','',0.0000000000),(147,19,97,0,'2021-04-29 15:17:29','',0.0000000000),(148,19,95,0,'2021-04-29 15:17:29','',0.0000000000),(149,19,72,0,'2021-04-29 15:17:29','',0.0000000000),(150,19,81,0,'2021-04-29 15:17:29','',0.0000000000),(151,19,69,0,'2021-04-29 15:17:29','',0.0000000000),(152,19,75,0,'2021-04-29 15:17:29','',0.0000000000),(153,19,71,0,'2021-04-29 15:17:29','',0.0000000000),(154,19,70,0,'2021-04-29 15:17:29','',0.0000000000),(155,19,74,1,'2021-04-29 15:17:29','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(156,19,77,0,'2021-04-29 15:17:29','',0.0000000000),(157,20,79,1,'2021-04-29 15:21:03','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(158,20,138,0,'2021-04-29 15:21:03','',0.0000000000),(159,20,107,0,'2021-04-29 15:21:03','',0.0000000000),(160,20,106,0,'2021-04-29 15:21:03','',0.0000000000),(161,20,76,0,'2021-04-29 15:21:03','',0.0000000000),(162,20,98,0,'2021-04-29 15:21:03','',0.0000000000),(163,20,96,0,'2021-04-29 15:21:03','',0.0000000000),(164,20,119,0,'2021-04-29 15:21:03','',0.0000000000),(165,20,118,0,'2021-04-29 15:21:03','',0.0000000000),(166,20,105,0,'2021-04-29 15:21:03','',0.0000000000),(167,20,120,0,'2021-04-29 15:21:03','',0.0000000000),(168,20,121,0,'2021-04-29 15:21:03','',0.0000000000),(169,20,80,0,'2021-04-29 15:21:03','',0.0000000000),(170,20,78,1,'2021-04-29 15:21:03','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(171,20,103,0,'2021-04-29 15:21:03','',0.0000000000),(172,20,73,0,'2021-04-29 15:21:03','',0.0000000000),(173,20,97,0,'2021-04-29 15:21:03','',0.0000000000),(174,20,95,0,'2021-04-29 15:21:03','',0.0000000000),(175,20,72,0,'2021-04-29 15:21:03','',0.0000000000),(176,20,81,0,'2021-04-29 15:21:03','',0.0000000000),(177,20,69,0,'2021-04-29 15:21:03','',0.0000000000),(178,20,75,0,'2021-04-29 15:21:03','',0.0000000000),(179,20,71,0,'2021-04-29 15:21:03','',0.0000000000),(180,20,70,0,'2021-04-29 15:21:03','',0.0000000000),(181,20,74,1,'2021-04-29 15:21:03','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(182,20,77,0,'2021-04-29 15:21:03','',0.0000000000),(183,21,79,1,'2021-04-29 15:22:29','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(184,21,138,0,'2021-04-29 15:22:29','',0.0000000000),(185,21,107,0,'2021-04-29 15:22:29','',0.0000000000),(186,21,106,0,'2021-04-29 15:22:29','',0.0000000000),(187,21,76,0,'2021-04-29 15:22:29','',0.0000000000),(188,21,98,0,'2021-04-29 15:22:29','',0.0000000000),(189,21,96,0,'2021-04-29 15:22:29','',0.0000000000),(190,21,119,0,'2021-04-29 15:22:29','',0.0000000000),(191,21,118,0,'2021-04-29 15:22:29','',0.0000000000),(192,21,105,0,'2021-04-29 15:22:29','',0.0000000000),(193,21,120,0,'2021-04-29 15:22:29','',0.0000000000),(194,21,121,0,'2021-04-29 15:22:29','',0.0000000000),(195,21,80,0,'2021-04-29 15:22:29','',0.0000000000),(196,21,78,1,'2021-04-29 15:22:29','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(197,21,103,0,'2021-04-29 15:22:29','',0.0000000000),(198,21,73,0,'2021-04-29 15:22:29','',0.0000000000),(199,21,97,0,'2021-04-29 15:22:29','',0.0000000000),(200,21,95,0,'2021-04-29 15:22:29','',0.0000000000),(201,21,72,0,'2021-04-29 15:22:29','',0.0000000000),(202,21,81,0,'2021-04-29 15:22:29','',0.0000000000),(203,21,69,0,'2021-04-29 15:22:29','',0.0000000000),(204,21,75,0,'2021-04-29 15:22:29','',0.0000000000),(205,21,71,0,'2021-04-29 15:22:29','',0.0000000000),(206,21,70,0,'2021-04-29 15:22:29','',0.0000000000),(207,21,74,1,'2021-04-29 15:22:29','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(208,21,77,0,'2021-04-29 15:22:29','',0.0000000000),(209,22,79,1,'2021-04-29 15:33:17','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(210,22,138,0,'2021-04-29 15:33:17','',0.0000000000),(211,22,107,0,'2021-04-29 15:33:17','',0.0000000000),(212,22,106,0,'2021-04-29 15:33:17','',0.0000000000),(213,22,76,0,'2021-04-29 15:33:17','',0.0000000000),(214,22,98,0,'2021-04-29 15:33:17','',0.0000000000),(215,22,96,0,'2021-04-29 15:33:17','',0.0000000000),(216,22,119,0,'2021-04-29 15:33:17','',0.0000000000),(217,22,118,0,'2021-04-29 15:33:17','',0.0000000000),(218,22,105,0,'2021-04-29 15:33:17','',0.0000000000),(219,22,120,0,'2021-04-29 15:33:17','',0.0000000000),(220,22,121,0,'2021-04-29 15:33:17','',0.0000000000),(221,22,80,0,'2021-04-29 15:33:17','',0.0000000000),(222,22,78,1,'2021-04-29 15:33:17','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(223,22,103,0,'2021-04-29 15:33:17','',0.0000000000),(224,22,73,0,'2021-04-29 15:33:17','',0.0000000000),(225,22,97,0,'2021-04-29 15:33:17','',0.0000000000),(226,22,95,0,'2021-04-29 15:33:17','',0.0000000000),(227,22,72,0,'2021-04-29 15:33:17','',0.0000000000),(228,22,81,0,'2021-04-29 15:33:17','',0.0000000000),(229,22,69,0,'2021-04-29 15:33:17','',0.0000000000),(230,22,75,0,'2021-04-29 15:33:17','',0.0000000000),(231,22,71,0,'2021-04-29 15:33:17','',0.0000000000),(232,22,70,0,'2021-04-29 15:33:17','',0.0000000000),(233,22,74,1,'2021-04-29 15:33:17','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(234,22,77,0,'2021-04-29 15:33:17','',0.0000000000),(235,23,79,1,'2021-04-29 15:34:25','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(236,23,138,0,'2021-04-29 15:34:25','',0.0000000000),(237,23,107,0,'2021-04-29 15:34:25','',0.0000000000),(238,23,106,0,'2021-04-29 15:34:25','',0.0000000000),(239,23,76,0,'2021-04-29 15:34:25','',0.0000000000),(240,23,98,0,'2021-04-29 15:34:25','',0.0000000000),(241,23,96,0,'2021-04-29 15:34:25','',0.0000000000),(242,23,119,0,'2021-04-29 15:34:25','',0.0000000000),(243,23,118,0,'2021-04-29 15:34:25','',0.0000000000),(244,23,105,0,'2021-04-29 15:34:25','',0.0000000000),(245,23,120,0,'2021-04-29 15:34:25','',0.0000000000),(246,23,121,0,'2021-04-29 15:34:25','',0.0000000000),(247,23,80,0,'2021-04-29 15:34:25','',0.0000000000),(248,23,78,1,'2021-04-29 15:34:25','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(249,23,103,0,'2021-04-29 15:34:25','',0.0000000000),(250,23,73,0,'2021-04-29 15:34:25','',0.0000000000),(251,23,97,0,'2021-04-29 15:34:25','',0.0000000000),(252,23,95,0,'2021-04-29 15:34:25','',0.0000000000),(253,23,72,0,'2021-04-29 15:34:25','',0.0000000000),(254,23,81,0,'2021-04-29 15:34:25','',0.0000000000),(255,23,69,0,'2021-04-29 15:34:25','',0.0000000000),(256,23,75,0,'2021-04-29 15:34:25','',0.0000000000),(257,23,71,0,'2021-04-29 15:34:25','',0.0000000000),(258,23,70,0,'2021-04-29 15:34:25','',0.0000000000),(259,23,74,1,'2021-04-29 15:34:25','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(260,23,77,0,'2021-04-29 15:34:25','',0.0000000000),(261,24,79,1,'2021-04-29 15:40:16','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(262,24,138,0,'2021-04-29 15:40:16','',0.0000000000),(263,24,107,0,'2021-04-29 15:40:16','',0.0000000000),(264,24,106,0,'2021-04-29 15:40:16','',0.0000000000),(265,24,76,0,'2021-04-29 15:40:16','',0.0000000000),(266,24,98,0,'2021-04-29 15:40:16','',0.0000000000),(267,24,96,0,'2021-04-29 15:40:16','',0.0000000000),(268,24,119,0,'2021-04-29 15:40:16','',0.0000000000),(269,24,118,0,'2021-04-29 15:40:16','',0.0000000000),(270,24,105,0,'2021-04-29 15:40:16','',0.0000000000),(271,24,120,0,'2021-04-29 15:40:16','',0.0000000000),(272,24,121,0,'2021-04-29 15:40:16','',0.0000000000),(273,24,80,0,'2021-04-29 15:40:16','',0.0000000000),(274,24,78,1,'2021-04-29 15:40:16','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(275,24,103,0,'2021-04-29 15:40:16','',0.0000000000),(276,24,73,0,'2021-04-29 15:40:16','',0.0000000000),(277,24,97,0,'2021-04-29 15:40:16','',0.0000000000),(278,24,95,0,'2021-04-29 15:40:16','',0.0000000000),(279,24,72,0,'2021-04-29 15:40:16','',0.0000000000),(280,24,81,0,'2021-04-29 15:40:16','',0.0000000000),(281,24,69,0,'2021-04-29 15:40:16','',0.0000000000),(282,24,75,0,'2021-04-29 15:40:16','',0.0000000000),(283,24,71,0,'2021-04-29 15:40:16','',0.0000000000),(284,24,70,0,'2021-04-29 15:40:16','',0.0000000000),(285,24,74,1,'2021-04-29 15:40:16','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(286,24,77,0,'2021-04-29 15:40:16','',0.0000000000),(287,25,79,1,'2021-04-29 15:58:52','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(288,25,138,0,'2021-04-29 15:58:52','',0.0000000000),(289,25,107,0,'2021-04-29 15:58:52','',0.0000000000),(290,25,106,0,'2021-04-29 15:58:52','',0.0000000000),(291,25,76,0,'2021-04-29 15:58:52','',0.0000000000),(292,25,98,0,'2021-04-29 15:58:52','',0.0000000000),(293,25,96,0,'2021-04-29 15:58:52','',0.0000000000),(294,25,119,0,'2021-04-29 15:58:52','',0.0000000000),(295,25,118,0,'2021-04-29 15:58:52','',0.0000000000),(296,25,105,0,'2021-04-29 15:58:52','',0.0000000000),(297,25,120,0,'2021-04-29 15:58:52','',0.0000000000),(298,25,121,0,'2021-04-29 15:58:52','',0.0000000000),(299,25,80,0,'2021-04-29 15:58:52','',0.0000000000),(300,25,78,1,'2021-04-29 15:58:52','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(301,25,103,0,'2021-04-29 15:58:52','',0.0000000000),(302,25,73,0,'2021-04-29 15:58:52','',0.0000000000),(303,25,97,0,'2021-04-29 15:58:52','',0.0000000000),(304,25,95,0,'2021-04-29 15:58:52','',0.0000000000),(305,25,72,0,'2021-04-29 15:58:52','',0.0000000000),(306,25,81,0,'2021-04-29 15:58:52','',0.0000000000),(307,25,69,0,'2021-04-29 15:58:52','',0.0000000000),(308,25,75,0,'2021-04-29 15:58:52','',0.0000000000),(309,25,71,0,'2021-04-29 15:58:52','',0.0000000000),(310,25,70,0,'2021-04-29 15:58:52','',0.0000000000),(311,25,74,1,'2021-04-29 15:58:52','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(312,25,77,0,'2021-04-29 15:58:52','',0.0000000000),(313,26,79,1,'2021-04-29 15:59:57','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(314,26,138,0,'2021-04-29 15:59:57','',0.0000000000),(315,26,107,0,'2021-04-29 15:59:57','',0.0000000000),(316,26,106,0,'2021-04-29 15:59:57','',0.0000000000),(317,26,76,0,'2021-04-29 15:59:57','',0.0000000000),(318,26,98,0,'2021-04-29 15:59:57','',0.0000000000),(319,26,96,0,'2021-04-29 15:59:57','',0.0000000000),(320,26,119,0,'2021-04-29 15:59:57','',0.0000000000),(321,26,118,0,'2021-04-29 15:59:57','',0.0000000000),(322,26,105,0,'2021-04-29 15:59:57','',0.0000000000),(323,26,120,0,'2021-04-29 15:59:57','',0.0000000000),(324,26,121,0,'2021-04-29 15:59:57','',0.0000000000),(325,26,80,0,'2021-04-29 15:59:57','',0.0000000000),(326,26,78,1,'2021-04-29 15:59:57','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(327,26,103,0,'2021-04-29 15:59:57','',0.0000000000),(328,26,73,0,'2021-04-29 15:59:57','',0.0000000000),(329,26,97,0,'2021-04-29 15:59:57','',0.0000000000),(330,26,95,0,'2021-04-29 15:59:57','',0.0000000000),(331,26,72,0,'2021-04-29 15:59:57','',0.0000000000),(332,26,81,0,'2021-04-29 15:59:57','',0.0000000000),(333,26,69,0,'2021-04-29 15:59:57','',0.0000000000),(334,26,75,0,'2021-04-29 15:59:57','',0.0000000000),(335,26,71,0,'2021-04-29 15:59:57','',0.0000000000),(336,26,70,0,'2021-04-29 15:59:57','',0.0000000000),(337,26,74,1,'2021-04-29 15:59:57','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(338,26,77,0,'2021-04-29 15:59:57','',0.0000000000),(339,27,79,1,'2021-04-29 16:02:59','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(340,27,138,0,'2021-04-29 16:02:59','',0.0000000000),(341,27,107,0,'2021-04-29 16:02:59','',0.0000000000),(342,27,106,0,'2021-04-29 16:02:59','',0.0000000000),(343,27,76,0,'2021-04-29 16:02:59','',0.0000000000),(344,27,98,0,'2021-04-29 16:02:59','',0.0000000000),(345,27,96,0,'2021-04-29 16:02:59','',0.0000000000),(346,27,119,0,'2021-04-29 16:02:59','',0.0000000000),(347,27,118,0,'2021-04-29 16:02:59','',0.0000000000),(348,27,105,0,'2021-04-29 16:02:59','',0.0000000000),(349,27,120,0,'2021-04-29 16:02:59','',0.0000000000),(350,27,121,0,'2021-04-29 16:02:59','',0.0000000000),(351,27,80,0,'2021-04-29 16:02:59','',0.0000000000),(352,27,78,1,'2021-04-29 16:02:59','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(353,27,103,0,'2021-04-29 16:02:59','',0.0000000000),(354,27,73,0,'2021-04-29 16:02:59','',0.0000000000),(355,27,97,0,'2021-04-29 16:02:59','',0.0000000000),(356,27,95,0,'2021-04-29 16:02:59','',0.0000000000),(357,27,72,0,'2021-04-29 16:02:59','',0.0000000000),(358,27,81,0,'2021-04-29 16:02:59','',0.0000000000),(359,27,69,0,'2021-04-29 16:02:59','',0.0000000000),(360,27,75,0,'2021-04-29 16:02:59','',0.0000000000),(361,27,71,0,'2021-04-29 16:02:59','',0.0000000000),(362,27,70,0,'2021-04-29 16:02:59','',0.0000000000),(363,27,74,1,'2021-04-29 16:02:59','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(364,27,77,0,'2021-04-29 16:02:59','',0.0000000000),(365,28,79,1,'2021-04-29 16:06:27','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(366,28,138,0,'2021-04-29 16:06:27','',0.0000000000),(367,28,107,0,'2021-04-29 16:06:27','',0.0000000000),(368,28,106,0,'2021-04-29 16:06:27','',0.0000000000),(369,28,76,0,'2021-04-29 16:06:27','',0.0000000000),(370,28,98,0,'2021-04-29 16:06:27','',0.0000000000),(371,28,96,0,'2021-04-29 16:06:27','',0.0000000000),(372,28,119,0,'2021-04-29 16:06:27','',0.0000000000),(373,28,118,0,'2021-04-29 16:06:27','',0.0000000000),(374,28,105,0,'2021-04-29 16:06:27','',0.0000000000),(375,28,120,0,'2021-04-29 16:06:27','',0.0000000000),(376,28,121,0,'2021-04-29 16:06:27','',0.0000000000),(377,28,80,0,'2021-04-29 16:06:27','',0.0000000000),(378,28,78,1,'2021-04-29 16:06:27','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(379,28,103,0,'2021-04-29 16:06:27','',0.0000000000),(380,28,73,0,'2021-04-29 16:06:27','',0.0000000000),(381,28,97,0,'2021-04-29 16:06:27','',0.0000000000),(382,28,95,0,'2021-04-29 16:06:27','',0.0000000000),(383,28,72,0,'2021-04-29 16:06:27','',0.0000000000),(384,28,81,0,'2021-04-29 16:06:27','',0.0000000000),(385,28,69,0,'2021-04-29 16:06:27','',0.0000000000),(386,28,75,0,'2021-04-29 16:06:27','',0.0000000000),(387,28,71,0,'2021-04-29 16:06:27','',0.0000000000),(388,28,70,0,'2021-04-29 16:06:27','',0.0000000000),(389,28,74,1,'2021-04-29 16:06:27','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(390,28,77,0,'2021-04-29 16:06:27','',0.0000000000),(391,29,79,1,'2021-04-29 16:07:24','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(392,29,138,0,'2021-04-29 16:07:24','',0.0000000000),(393,29,107,0,'2021-04-29 16:07:24','',0.0000000000),(394,29,106,0,'2021-04-29 16:07:24','',0.0000000000),(395,29,76,0,'2021-04-29 16:07:24','',0.0000000000),(396,29,98,0,'2021-04-29 16:07:24','',0.0000000000),(397,29,96,0,'2021-04-29 16:07:24','',0.0000000000),(398,29,119,0,'2021-04-29 16:07:24','',0.0000000000),(399,29,118,0,'2021-04-29 16:07:24','',0.0000000000),(400,29,105,0,'2021-04-29 16:07:24','',0.0000000000),(401,29,120,0,'2021-04-29 16:07:24','',0.0000000000),(402,29,121,0,'2021-04-29 16:07:24','',0.0000000000),(403,29,80,0,'2021-04-29 16:07:24','',0.0000000000),(404,29,78,1,'2021-04-29 16:07:24','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(405,29,103,0,'2021-04-29 16:07:24','',0.0000000000),(406,29,73,0,'2021-04-29 16:07:24','',0.0000000000),(407,29,97,0,'2021-04-29 16:07:24','',0.0000000000),(408,29,95,0,'2021-04-29 16:07:24','',0.0000000000),(409,29,72,0,'2021-04-29 16:07:24','',0.0000000000),(410,29,81,0,'2021-04-29 16:07:24','',0.0000000000),(411,29,69,0,'2021-04-29 16:07:24','',0.0000000000),(412,29,75,0,'2021-04-29 16:07:24','',0.0000000000),(413,29,71,0,'2021-04-29 16:07:24','',0.0000000000),(414,29,70,0,'2021-04-29 16:07:24','',0.0000000000),(415,29,74,1,'2021-04-29 16:07:24','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(416,29,77,0,'2021-04-29 16:07:24','',0.0000000000),(417,30,79,1,'2021-04-29 16:13:17','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(418,30,138,0,'2021-04-29 16:13:17','',0.0000000000),(419,30,107,0,'2021-04-29 16:13:17','',0.0000000000),(420,30,106,0,'2021-04-29 16:13:17','',0.0000000000),(421,30,76,0,'2021-04-29 16:13:17','',0.0000000000),(422,30,98,0,'2021-04-29 16:13:17','',0.0000000000),(423,30,96,0,'2021-04-29 16:13:17','',0.0000000000),(424,30,119,0,'2021-04-29 16:13:17','',0.0000000000),(425,30,118,0,'2021-04-29 16:13:17','',0.0000000000),(426,30,105,0,'2021-04-29 16:13:17','',0.0000000000),(427,30,120,0,'2021-04-29 16:13:17','',0.0000000000),(428,30,121,0,'2021-04-29 16:13:17','',0.0000000000),(429,30,80,0,'2021-04-29 16:13:17','',0.0000000000),(430,30,78,1,'2021-04-29 16:13:17','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(431,30,103,0,'2021-04-29 16:13:17','',0.0000000000),(432,30,73,0,'2021-04-29 16:13:17','',0.0000000000),(433,30,97,0,'2021-04-29 16:13:17','',0.0000000000),(434,30,95,0,'2021-04-29 16:13:17','',0.0000000000),(435,30,72,0,'2021-04-29 16:13:17','',0.0000000000),(436,30,81,0,'2021-04-29 16:13:17','',0.0000000000),(437,30,69,0,'2021-04-29 16:13:17','',0.0000000000),(438,30,75,0,'2021-04-29 16:13:17','',0.0000000000),(439,30,71,0,'2021-04-29 16:13:17','',0.0000000000),(440,30,70,0,'2021-04-29 16:13:17','',0.0000000000),(441,30,74,1,'2021-04-29 16:13:17','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(442,30,77,0,'2021-04-29 16:13:17','',0.0000000000),(443,31,79,1,'2021-04-29 16:13:42','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(444,31,138,0,'2021-04-29 16:13:42','',0.0000000000),(445,31,107,0,'2021-04-29 16:13:42','',0.0000000000),(446,31,106,0,'2021-04-29 16:13:42','',0.0000000000),(447,31,76,0,'2021-04-29 16:13:42','',0.0000000000),(448,31,98,0,'2021-04-29 16:13:42','',0.0000000000),(449,31,96,0,'2021-04-29 16:13:42','',0.0000000000),(450,31,119,0,'2021-04-29 16:13:42','',0.0000000000),(451,31,118,0,'2021-04-29 16:13:42','',0.0000000000),(452,31,105,0,'2021-04-29 16:13:42','',0.0000000000),(453,31,120,0,'2021-04-29 16:13:42','',0.0000000000),(454,31,121,0,'2021-04-29 16:13:42','',0.0000000000),(455,31,80,0,'2021-04-29 16:13:42','',0.0000000000),(456,31,78,1,'2021-04-29 16:13:42','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(457,31,103,0,'2021-04-29 16:13:42','',0.0000000000),(458,31,73,0,'2021-04-29 16:13:42','',0.0000000000),(459,31,97,0,'2021-04-29 16:13:42','',0.0000000000),(460,31,95,0,'2021-04-29 16:13:42','',0.0000000000),(461,31,72,0,'2021-04-29 16:13:42','',0.0000000000),(462,31,81,0,'2021-04-29 16:13:42','',0.0000000000),(463,31,69,0,'2021-04-29 16:13:42','',0.0000000000),(464,31,75,0,'2021-04-29 16:13:42','',0.0000000000),(465,31,71,0,'2021-04-29 16:13:42','',0.0000000000),(466,31,70,0,'2021-04-29 16:13:42','',0.0000000000),(467,31,74,1,'2021-04-29 16:13:42','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(468,31,77,0,'2021-04-29 16:13:42','',0.0000000000),(469,32,79,1,'2021-04-29 16:22:15','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(470,32,138,0,'2021-04-29 16:22:15','',0.0000000000),(471,32,107,0,'2021-04-29 16:22:15','',0.0000000000),(472,32,106,0,'2021-04-29 16:22:15','',0.0000000000),(473,32,76,0,'2021-04-29 16:22:15','',0.0000000000),(474,32,98,0,'2021-04-29 16:22:15','',0.0000000000),(475,32,96,0,'2021-04-29 16:22:15','',0.0000000000),(476,32,119,0,'2021-04-29 16:22:15','',0.0000000000),(477,32,118,0,'2021-04-29 16:22:15','',0.0000000000),(478,32,105,0,'2021-04-29 16:22:15','',0.0000000000),(479,32,120,0,'2021-04-29 16:22:15','',0.0000000000),(480,32,121,0,'2021-04-29 16:22:15','',0.0000000000),(481,32,80,0,'2021-04-29 16:22:15','',0.0000000000),(482,32,78,1,'2021-04-29 16:22:15','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(483,32,103,0,'2021-04-29 16:22:15','',0.0000000000),(484,32,73,0,'2021-04-29 16:22:15','',0.0000000000),(485,32,97,0,'2021-04-29 16:22:15','',0.0000000000),(486,32,95,0,'2021-04-29 16:22:15','',0.0000000000),(487,32,72,0,'2021-04-29 16:22:15','',0.0000000000),(488,32,81,0,'2021-04-29 16:22:15','',0.0000000000),(489,32,69,0,'2021-04-29 16:22:15','',0.0000000000),(490,32,75,0,'2021-04-29 16:22:15','',0.0000000000),(491,32,71,0,'2021-04-29 16:22:15','',0.0000000000),(492,32,70,0,'2021-04-29 16:22:15','',0.0000000000),(493,32,74,1,'2021-04-29 16:22:15','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(494,32,77,0,'2021-04-29 16:22:15','',0.0000000000),(495,33,79,1,'2021-04-29 16:26:12','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(496,33,138,0,'2021-04-29 16:26:12','',0.0000000000),(497,33,107,0,'2021-04-29 16:26:12','',0.0000000000),(498,33,106,0,'2021-04-29 16:26:12','',0.0000000000),(499,33,76,0,'2021-04-29 16:26:12','',0.0000000000),(500,33,98,0,'2021-04-29 16:26:12','',0.0000000000),(501,33,96,0,'2021-04-29 16:26:12','',0.0000000000),(502,33,119,0,'2021-04-29 16:26:12','',0.0000000000),(503,33,118,0,'2021-04-29 16:26:12','',0.0000000000),(504,33,105,0,'2021-04-29 16:26:12','',0.0000000000),(505,33,120,0,'2021-04-29 16:26:12','',0.0000000000),(506,33,121,0,'2021-04-29 16:26:12','',0.0000000000),(507,33,80,0,'2021-04-29 16:26:12','',0.0000000000),(508,33,78,1,'2021-04-29 16:26:12','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(509,33,103,0,'2021-04-29 16:26:12','',0.0000000000),(510,33,73,0,'2021-04-29 16:26:12','',0.0000000000),(511,33,97,0,'2021-04-29 16:26:12','',0.0000000000),(512,33,95,0,'2021-04-29 16:26:12','',0.0000000000),(513,33,72,0,'2021-04-29 16:26:12','',0.0000000000),(514,33,81,0,'2021-04-29 16:26:12','',0.0000000000),(515,33,69,0,'2021-04-29 16:26:12','',0.0000000000),(516,33,75,0,'2021-04-29 16:26:12','',0.0000000000),(517,33,71,0,'2021-04-29 16:26:12','',0.0000000000),(518,33,70,0,'2021-04-29 16:26:12','',0.0000000000),(519,33,74,1,'2021-04-29 16:26:12','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(520,33,77,0,'2021-04-29 16:26:12','',0.0000000000),(521,34,79,1,'2021-04-29 16:33:12','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(522,34,138,0,'2021-04-29 16:33:12','',0.0000000000),(523,34,107,0,'2021-04-29 16:33:12','',0.0000000000),(524,34,106,0,'2021-04-29 16:33:12','',0.0000000000),(525,34,76,0,'2021-04-29 16:33:12','',0.0000000000),(526,34,98,0,'2021-04-29 16:33:12','',0.0000000000),(527,34,96,0,'2021-04-29 16:33:12','',0.0000000000),(528,34,119,0,'2021-04-29 16:33:12','',0.0000000000),(529,34,118,0,'2021-04-29 16:33:12','',0.0000000000),(530,34,105,0,'2021-04-29 16:33:12','',0.0000000000),(531,34,120,0,'2021-04-29 16:33:12','',0.0000000000),(532,34,121,0,'2021-04-29 16:33:12','',0.0000000000),(533,34,80,0,'2021-04-29 16:33:12','',0.0000000000),(534,34,78,1,'2021-04-29 16:33:12','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(535,34,103,0,'2021-04-29 16:33:12','',0.0000000000),(536,34,73,0,'2021-04-29 16:33:12','',0.0000000000),(537,34,97,0,'2021-04-29 16:33:12','',0.0000000000),(538,34,95,0,'2021-04-29 16:33:12','',0.0000000000),(539,34,72,0,'2021-04-29 16:33:12','',0.0000000000),(540,34,81,0,'2021-04-29 16:33:12','',0.0000000000),(541,34,69,0,'2021-04-29 16:33:12','',0.0000000000),(542,34,75,0,'2021-04-29 16:33:12','',0.0000000000),(543,34,71,0,'2021-04-29 16:33:12','',0.0000000000),(544,34,70,0,'2021-04-29 16:33:12','',0.0000000000),(545,34,74,1,'2021-04-29 16:33:12','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(546,34,77,0,'2021-04-29 16:33:12','',0.0000000000),(547,35,79,1,'2021-04-29 16:35:18','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(548,35,138,0,'2021-04-29 16:35:18','',0.0000000000),(549,35,107,0,'2021-04-29 16:35:18','',0.0000000000),(550,35,106,0,'2021-04-29 16:35:18','',0.0000000000),(551,35,76,0,'2021-04-29 16:35:18','',0.0000000000),(552,35,98,0,'2021-04-29 16:35:18','',0.0000000000),(553,35,96,0,'2021-04-29 16:35:18','',0.0000000000),(554,35,119,0,'2021-04-29 16:35:18','',0.0000000000),(555,35,118,0,'2021-04-29 16:35:18','',0.0000000000),(556,35,105,0,'2021-04-29 16:35:18','',0.0000000000),(557,35,120,0,'2021-04-29 16:35:18','',0.0000000000),(558,35,121,0,'2021-04-29 16:35:18','',0.0000000000),(559,35,80,0,'2021-04-29 16:35:18','',0.0000000000),(560,35,78,1,'2021-04-29 16:35:18','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(561,35,103,0,'2021-04-29 16:35:18','',0.0000000000),(562,35,73,0,'2021-04-29 16:35:18','',0.0000000000),(563,35,97,0,'2021-04-29 16:35:18','',0.0000000000),(564,35,95,0,'2021-04-29 16:35:18','',0.0000000000),(565,35,72,0,'2021-04-29 16:35:18','',0.0000000000),(566,35,81,0,'2021-04-29 16:35:18','',0.0000000000),(567,35,69,0,'2021-04-29 16:35:18','',0.0000000000),(568,35,75,0,'2021-04-29 16:35:18','',0.0000000000),(569,35,71,0,'2021-04-29 16:35:18','',0.0000000000),(570,35,70,0,'2021-04-29 16:35:18','',0.0000000000),(571,35,74,1,'2021-04-29 16:35:18','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(572,35,77,0,'2021-04-29 16:35:18','',0.0000000000),(573,36,79,1,'2021-04-29 16:40:17','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(574,36,138,0,'2021-04-29 16:40:17','',0.0000000000),(575,36,107,0,'2021-04-29 16:40:17','',0.0000000000),(576,36,106,0,'2021-04-29 16:40:17','',0.0000000000),(577,36,76,0,'2021-04-29 16:40:17','',0.0000000000),(578,36,98,0,'2021-04-29 16:40:17','',0.0000000000),(579,36,96,0,'2021-04-29 16:40:17','',0.0000000000),(580,36,119,0,'2021-04-29 16:40:17','',0.0000000000),(581,36,118,0,'2021-04-29 16:40:17','',0.0000000000),(582,36,105,0,'2021-04-29 16:40:17','',0.0000000000),(583,36,120,0,'2021-04-29 16:40:17','',0.0000000000),(584,36,121,0,'2021-04-29 16:40:17','',0.0000000000),(585,36,80,0,'2021-04-29 16:40:17','',0.0000000000),(586,36,78,1,'2021-04-29 16:40:17','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(587,36,103,0,'2021-04-29 16:40:17','',0.0000000000),(588,36,73,0,'2021-04-29 16:40:17','',0.0000000000),(589,36,97,0,'2021-04-29 16:40:17','',0.0000000000),(590,36,95,0,'2021-04-29 16:40:17','',0.0000000000),(591,36,72,0,'2021-04-29 16:40:17','',0.0000000000),(592,36,81,0,'2021-04-29 16:40:17','',0.0000000000),(593,36,69,0,'2021-04-29 16:40:17','',0.0000000000),(594,36,75,0,'2021-04-29 16:40:17','',0.0000000000),(595,36,71,0,'2021-04-29 16:40:17','',0.0000000000),(596,36,70,0,'2021-04-29 16:40:17','',0.0000000000),(597,36,74,1,'2021-04-29 16:40:17','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(598,36,77,0,'2021-04-29 16:40:17','',0.0000000000),(599,37,79,1,'2021-04-29 17:10:36','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(600,37,138,0,'2021-04-29 17:10:36','',0.0000000000),(601,37,107,0,'2021-04-29 17:10:36','',0.0000000000),(602,37,106,0,'2021-04-29 17:10:36','',0.0000000000),(603,37,76,0,'2021-04-29 17:10:36','',0.0000000000),(604,37,98,0,'2021-04-29 17:10:36','',0.0000000000),(605,37,96,0,'2021-04-29 17:10:36','',0.0000000000),(606,37,119,0,'2021-04-29 17:10:36','',0.0000000000),(607,37,118,0,'2021-04-29 17:10:36','',0.0000000000),(608,37,105,0,'2021-04-29 17:10:36','',0.0000000000),(609,37,120,0,'2021-04-29 17:10:36','',0.0000000000),(610,37,121,0,'2021-04-29 17:10:36','',0.0000000000),(611,37,80,0,'2021-04-29 17:10:36','',0.0000000000),(612,37,78,1,'2021-04-29 17:10:36','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(613,37,103,0,'2021-04-29 17:10:36','',0.0000000000),(614,37,73,0,'2021-04-29 17:10:36','',0.0000000000),(615,37,97,0,'2021-04-29 17:10:36','',0.0000000000),(616,37,95,0,'2021-04-29 17:10:36','',0.0000000000),(617,37,72,0,'2021-04-29 17:10:36','',0.0000000000),(618,37,81,0,'2021-04-29 17:10:36','',0.0000000000),(619,37,69,0,'2021-04-29 17:10:36','',0.0000000000),(620,37,75,0,'2021-04-29 17:10:36','',0.0000000000),(621,37,71,0,'2021-04-29 17:10:36','',0.0000000000),(622,37,70,0,'2021-04-29 17:10:36','',0.0000000000),(623,37,74,1,'2021-04-29 17:10:36','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(624,37,77,0,'2021-04-29 17:10:36','',0.0000000000),(625,38,79,1,'2021-04-29 17:13:09','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(626,38,138,0,'2021-04-29 17:13:09','',0.0000000000),(627,38,107,0,'2021-04-29 17:13:09','',0.0000000000),(628,38,106,0,'2021-04-29 17:13:09','',0.0000000000),(629,38,76,0,'2021-04-29 17:13:09','',0.0000000000),(630,38,98,0,'2021-04-29 17:13:09','',0.0000000000),(631,38,96,0,'2021-04-29 17:13:09','',0.0000000000),(632,38,119,0,'2021-04-29 17:13:09','',0.0000000000),(633,38,118,0,'2021-04-29 17:13:09','',0.0000000000),(634,38,105,0,'2021-04-29 17:13:09','',0.0000000000),(635,38,120,0,'2021-04-29 17:13:09','',0.0000000000),(636,38,121,0,'2021-04-29 17:13:09','',0.0000000000),(637,38,80,0,'2021-04-29 17:13:09','',0.0000000000),(638,38,78,1,'2021-04-29 17:13:09','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(639,38,103,0,'2021-04-29 17:13:09','',0.0000000000),(640,38,73,0,'2021-04-29 17:13:09','',0.0000000000),(641,38,97,0,'2021-04-29 17:13:09','',0.0000000000),(642,38,95,0,'2021-04-29 17:13:09','',0.0000000000),(643,38,72,0,'2021-04-29 17:13:09','',0.0000000000),(644,38,81,0,'2021-04-29 17:13:09','',0.0000000000),(645,38,69,0,'2021-04-29 17:13:09','',0.0000000000),(646,38,75,0,'2021-04-29 17:13:09','',0.0000000000),(647,38,71,0,'2021-04-29 17:13:09','',0.0000000000),(648,38,70,0,'2021-04-29 17:13:09','',0.0000000000),(649,38,74,1,'2021-04-29 17:13:09','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(650,38,77,0,'2021-04-29 17:13:09','',0.0000000000),(651,39,79,1,'2021-04-29 17:14:01','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(652,39,138,0,'2021-04-29 17:14:01','',0.0000000000),(653,39,107,0,'2021-04-29 17:14:01','',0.0000000000),(654,39,106,0,'2021-04-29 17:14:01','',0.0000000000),(655,39,76,0,'2021-04-29 17:14:01','',0.0000000000),(656,39,98,0,'2021-04-29 17:14:01','',0.0000000000),(657,39,96,0,'2021-04-29 17:14:01','',0.0000000000),(658,39,119,0,'2021-04-29 17:14:01','',0.0000000000),(659,39,118,0,'2021-04-29 17:14:01','',0.0000000000),(660,39,105,0,'2021-04-29 17:14:01','',0.0000000000),(661,39,120,0,'2021-04-29 17:14:01','',0.0000000000),(662,39,121,0,'2021-04-29 17:14:01','',0.0000000000),(663,39,80,0,'2021-04-29 17:14:01','',0.0000000000),(664,39,78,1,'2021-04-29 17:14:01','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(665,39,103,0,'2021-04-29 17:14:01','',0.0000000000),(666,39,73,0,'2021-04-29 17:14:01','',0.0000000000),(667,39,97,0,'2021-04-29 17:14:01','',0.0000000000),(668,39,95,0,'2021-04-29 17:14:01','',0.0000000000),(669,39,72,0,'2021-04-29 17:14:01','',0.0000000000),(670,39,81,0,'2021-04-29 17:14:01','',0.0000000000),(671,39,69,0,'2021-04-29 17:14:01','',0.0000000000),(672,39,75,0,'2021-04-29 17:14:01','',0.0000000000),(673,39,71,0,'2021-04-29 17:14:01','',0.0000000000),(674,39,70,0,'2021-04-29 17:14:01','',0.0000000000),(675,39,74,1,'2021-04-29 17:14:01','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(676,39,77,0,'2021-04-29 17:14:01','',0.0000000000),(677,40,79,1,'2021-04-29 17:14:28','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(678,40,138,0,'2021-04-29 17:14:28','',0.0000000000),(679,40,107,0,'2021-04-29 17:14:28','',0.0000000000),(680,40,106,0,'2021-04-29 17:14:28','',0.0000000000),(681,40,76,0,'2021-04-29 17:14:28','',0.0000000000),(682,40,98,0,'2021-04-29 17:14:28','',0.0000000000),(683,40,96,0,'2021-04-29 17:14:28','',0.0000000000),(684,40,119,0,'2021-04-29 17:14:28','',0.0000000000),(685,40,118,0,'2021-04-29 17:14:28','',0.0000000000),(686,40,105,0,'2021-04-29 17:14:28','',0.0000000000),(687,40,120,0,'2021-04-29 17:14:28','',0.0000000000),(688,40,121,0,'2021-04-29 17:14:28','',0.0000000000),(689,40,80,0,'2021-04-29 17:14:28','',0.0000000000),(690,40,78,1,'2021-04-29 17:14:28','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(691,40,103,0,'2021-04-29 17:14:28','',0.0000000000),(692,40,73,0,'2021-04-29 17:14:28','',0.0000000000),(693,40,97,0,'2021-04-29 17:14:28','',0.0000000000),(694,40,95,0,'2021-04-29 17:14:28','',0.0000000000),(695,40,72,0,'2021-04-29 17:14:28','',0.0000000000),(696,40,81,0,'2021-04-29 17:14:28','',0.0000000000),(697,40,69,0,'2021-04-29 17:14:28','',0.0000000000),(698,40,75,0,'2021-04-29 17:14:28','',0.0000000000),(699,40,71,0,'2021-04-29 17:14:28','',0.0000000000),(700,40,70,0,'2021-04-29 17:14:28','',0.0000000000),(701,40,74,1,'2021-04-29 17:14:28','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(702,40,77,0,'2021-04-29 17:14:28','',0.0000000000),(703,41,79,1,'2021-04-29 17:16:11','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(704,41,138,0,'2021-04-29 17:16:11','',0.0000000000),(705,41,107,0,'2021-04-29 17:16:11','',0.0000000000),(706,41,106,0,'2021-04-29 17:16:11','',0.0000000000),(707,41,76,0,'2021-04-29 17:16:11','',0.0000000000),(708,41,98,0,'2021-04-29 17:16:11','',0.0000000000),(709,41,96,0,'2021-04-29 17:16:11','',0.0000000000),(710,41,119,0,'2021-04-29 17:16:11','',0.0000000000),(711,41,118,0,'2021-04-29 17:16:11','',0.0000000000),(712,41,105,0,'2021-04-29 17:16:11','',0.0000000000),(713,41,120,0,'2021-04-29 17:16:11','',0.0000000000),(714,41,121,0,'2021-04-29 17:16:11','',0.0000000000),(715,41,80,0,'2021-04-29 17:16:11','',0.0000000000),(716,41,78,1,'2021-04-29 17:16:11','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(717,41,103,0,'2021-04-29 17:16:11','',0.0000000000),(718,41,73,0,'2021-04-29 17:16:11','',0.0000000000),(719,41,97,0,'2021-04-29 17:16:11','',0.0000000000),(720,41,95,0,'2021-04-29 17:16:11','',0.0000000000),(721,41,72,0,'2021-04-29 17:16:11','',0.0000000000),(722,41,81,0,'2021-04-29 17:16:11','',0.0000000000),(723,41,69,0,'2021-04-29 17:16:11','',0.0000000000),(724,41,75,0,'2021-04-29 17:16:11','',0.0000000000),(725,41,71,0,'2021-04-29 17:16:11','',0.0000000000),(726,41,70,0,'2021-04-29 17:16:11','',0.0000000000),(727,41,74,1,'2021-04-29 17:16:11','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(728,41,77,0,'2021-04-29 17:16:11','',0.0000000000),(729,42,79,1,'2021-04-29 17:17:03','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(730,42,138,0,'2021-04-29 17:17:03','',0.0000000000),(731,42,107,0,'2021-04-29 17:17:03','',0.0000000000),(732,42,106,0,'2021-04-29 17:17:03','',0.0000000000),(733,42,76,0,'2021-04-29 17:17:03','',0.0000000000),(734,42,98,0,'2021-04-29 17:17:03','',0.0000000000),(735,42,96,0,'2021-04-29 17:17:03','',0.0000000000),(736,42,119,0,'2021-04-29 17:17:03','',0.0000000000),(737,42,118,0,'2021-04-29 17:17:03','',0.0000000000),(738,42,105,0,'2021-04-29 17:17:03','',0.0000000000),(739,42,120,0,'2021-04-29 17:17:03','',0.0000000000),(740,42,121,0,'2021-04-29 17:17:03','',0.0000000000),(741,42,80,0,'2021-04-29 17:17:03','',0.0000000000),(742,42,78,1,'2021-04-29 17:17:03','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(743,42,103,0,'2021-04-29 17:17:03','',0.0000000000),(744,42,73,0,'2021-04-29 17:17:03','',0.0000000000),(745,42,97,0,'2021-04-29 17:17:03','',0.0000000000),(746,42,95,0,'2021-04-29 17:17:03','',0.0000000000),(747,42,72,0,'2021-04-29 17:17:03','',0.0000000000),(748,42,81,0,'2021-04-29 17:17:03','',0.0000000000),(749,42,69,0,'2021-04-29 17:17:03','',0.0000000000),(750,42,75,0,'2021-04-29 17:17:03','',0.0000000000),(751,42,71,0,'2021-04-29 17:17:03','',0.0000000000),(752,42,70,0,'2021-04-29 17:17:03','',0.0000000000),(753,42,74,1,'2021-04-29 17:17:03','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(754,42,77,0,'2021-04-29 17:17:03','',0.0000000000),(755,43,79,1,'2021-04-29 17:27:04','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(756,43,138,0,'2021-04-29 17:27:04','',0.0000000000),(757,43,107,0,'2021-04-29 17:27:04','',0.0000000000),(758,43,106,0,'2021-04-29 17:27:04','',0.0000000000),(759,43,76,0,'2021-04-29 17:27:04','',0.0000000000),(760,43,98,0,'2021-04-29 17:27:04','',0.0000000000),(761,43,96,0,'2021-04-29 17:27:04','',0.0000000000),(762,43,119,0,'2021-04-29 17:27:04','',0.0000000000),(763,43,118,0,'2021-04-29 17:27:04','',0.0000000000),(764,43,105,0,'2021-04-29 17:27:04','',0.0000000000),(765,43,120,0,'2021-04-29 17:27:04','',0.0000000000),(766,43,121,0,'2021-04-29 17:27:04','',0.0000000000),(767,43,80,0,'2021-04-29 17:27:04','',0.0000000000),(768,43,78,1,'2021-04-29 17:27:04','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(769,43,103,0,'2021-04-29 17:27:04','',0.0000000000),(770,43,73,0,'2021-04-29 17:27:04','',0.0000000000),(771,43,97,0,'2021-04-29 17:27:04','',0.0000000000),(772,43,95,0,'2021-04-29 17:27:04','',0.0000000000),(773,43,72,0,'2021-04-29 17:27:04','',0.0000000000),(774,43,81,0,'2021-04-29 17:27:04','',0.0000000000),(775,43,69,0,'2021-04-29 17:27:04','',0.0000000000),(776,43,75,0,'2021-04-29 17:27:04','',0.0000000000),(777,43,71,0,'2021-04-29 17:27:04','',0.0000000000),(778,43,70,0,'2021-04-29 17:27:04','',0.0000000000),(779,43,74,1,'2021-04-29 17:27:04','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(780,43,77,0,'2021-04-29 17:27:04','',0.0000000000),(781,44,79,1,'2021-04-29 17:28:41','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(782,44,138,0,'2021-04-29 17:28:41','',0.0000000000),(783,44,107,0,'2021-04-29 17:28:41','',0.0000000000),(784,44,106,0,'2021-04-29 17:28:41','',0.0000000000),(785,44,76,0,'2021-04-29 17:28:41','',0.0000000000),(786,44,98,0,'2021-04-29 17:28:41','',0.0000000000),(787,44,96,0,'2021-04-29 17:28:41','',0.0000000000),(788,44,119,0,'2021-04-29 17:28:41','',0.0000000000),(789,44,118,0,'2021-04-29 17:28:41','',0.0000000000),(790,44,105,0,'2021-04-29 17:28:41','',0.0000000000),(791,44,120,0,'2021-04-29 17:28:41','',0.0000000000),(792,44,121,0,'2021-04-29 17:28:41','',0.0000000000),(793,44,80,0,'2021-04-29 17:28:41','',0.0000000000),(794,44,78,1,'2021-04-29 17:28:41','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(795,44,103,0,'2021-04-29 17:28:41','',0.0000000000),(796,44,73,0,'2021-04-29 17:28:41','',0.0000000000),(797,44,97,0,'2021-04-29 17:28:41','',0.0000000000),(798,44,95,0,'2021-04-29 17:28:41','',0.0000000000),(799,44,72,0,'2021-04-29 17:28:41','',0.0000000000),(800,44,81,0,'2021-04-29 17:28:41','',0.0000000000),(801,44,69,0,'2021-04-29 17:28:41','',0.0000000000),(802,44,75,0,'2021-04-29 17:28:41','',0.0000000000),(803,44,71,0,'2021-04-29 17:28:41','',0.0000000000),(804,44,70,0,'2021-04-29 17:28:41','',0.0000000000),(805,44,74,1,'2021-04-29 17:28:41','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(806,44,77,0,'2021-04-29 17:28:41','',0.0000000000),(807,45,79,1,'2021-04-29 17:30:36','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(808,45,138,0,'2021-04-29 17:30:36','',0.0000000000),(809,45,107,0,'2021-04-29 17:30:36','',0.0000000000),(810,45,106,0,'2021-04-29 17:30:36','',0.0000000000),(811,45,76,0,'2021-04-29 17:30:36','',0.0000000000),(812,45,98,0,'2021-04-29 17:30:36','',0.0000000000),(813,45,96,0,'2021-04-29 17:30:36','',0.0000000000),(814,45,119,0,'2021-04-29 17:30:36','',0.0000000000),(815,45,118,0,'2021-04-29 17:30:36','',0.0000000000),(816,45,105,0,'2021-04-29 17:30:36','',0.0000000000),(817,45,120,0,'2021-04-29 17:30:36','',0.0000000000),(818,45,121,0,'2021-04-29 17:30:36','',0.0000000000),(819,45,80,0,'2021-04-29 17:30:36','',0.0000000000),(820,45,78,1,'2021-04-29 17:30:36','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(821,45,103,0,'2021-04-29 17:30:36','',0.0000000000),(822,45,73,0,'2021-04-29 17:30:36','',0.0000000000),(823,45,97,0,'2021-04-29 17:30:36','',0.0000000000),(824,45,95,0,'2021-04-29 17:30:36','',0.0000000000),(825,45,72,0,'2021-04-29 17:30:36','',0.0000000000),(826,45,81,0,'2021-04-29 17:30:36','',0.0000000000),(827,45,69,0,'2021-04-29 17:30:36','',0.0000000000),(828,45,75,0,'2021-04-29 17:30:36','',0.0000000000),(829,45,71,0,'2021-04-29 17:30:36','',0.0000000000),(830,45,70,0,'2021-04-29 17:30:36','',0.0000000000),(831,45,74,1,'2021-04-29 17:30:36','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(832,45,77,0,'2021-04-29 17:30:36','',0.0000000000),(833,46,79,1,'2021-04-29 17:31:35','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(834,46,138,0,'2021-04-29 17:31:35','',0.0000000000),(835,46,107,0,'2021-04-29 17:31:35','',0.0000000000),(836,46,106,0,'2021-04-29 17:31:35','',0.0000000000),(837,46,76,0,'2021-04-29 17:31:35','',0.0000000000),(838,46,98,0,'2021-04-29 17:31:35','',0.0000000000),(839,46,96,0,'2021-04-29 17:31:35','',0.0000000000),(840,46,119,0,'2021-04-29 17:31:35','',0.0000000000),(841,46,118,0,'2021-04-29 17:31:35','',0.0000000000),(842,46,105,0,'2021-04-29 17:31:35','',0.0000000000),(843,46,120,0,'2021-04-29 17:31:35','',0.0000000000),(844,46,121,0,'2021-04-29 17:31:35','',0.0000000000),(845,46,80,0,'2021-04-29 17:31:35','',0.0000000000),(846,46,78,1,'2021-04-29 17:31:35','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(847,46,103,0,'2021-04-29 17:31:35','',0.0000000000),(848,46,73,0,'2021-04-29 17:31:35','',0.0000000000),(849,46,97,0,'2021-04-29 17:31:35','',0.0000000000),(850,46,95,0,'2021-04-29 17:31:35','',0.0000000000),(851,46,72,0,'2021-04-29 17:31:35','',0.0000000000),(852,46,81,0,'2021-04-29 17:31:35','',0.0000000000),(853,46,69,0,'2021-04-29 17:31:35','',0.0000000000),(854,46,75,0,'2021-04-29 17:31:35','',0.0000000000),(855,46,71,0,'2021-04-29 17:31:35','',0.0000000000),(856,46,70,0,'2021-04-29 17:31:35','',0.0000000000),(857,46,74,1,'2021-04-29 17:31:35','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(858,46,77,0,'2021-04-29 17:31:35','',0.0000000000),(859,47,79,1,'2021-04-29 17:38:31','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(860,47,138,0,'2021-04-29 17:38:31','',0.0000000000),(861,47,107,0,'2021-04-29 17:38:31','',0.0000000000),(862,47,106,0,'2021-04-29 17:38:31','',0.0000000000),(863,47,76,0,'2021-04-29 17:38:31','',0.0000000000),(864,47,98,0,'2021-04-29 17:38:31','',0.0000000000),(865,47,96,0,'2021-04-29 17:38:31','',0.0000000000),(866,47,119,0,'2021-04-29 17:38:31','',0.0000000000),(867,47,118,0,'2021-04-29 17:38:31','',0.0000000000),(868,47,105,0,'2021-04-29 17:38:31','',0.0000000000),(869,47,120,0,'2021-04-29 17:38:31','',0.0000000000),(870,47,121,0,'2021-04-29 17:38:31','',0.0000000000),(871,47,80,0,'2021-04-29 17:38:31','',0.0000000000),(872,47,78,1,'2021-04-29 17:38:31','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(873,47,103,0,'2021-04-29 17:38:31','',0.0000000000),(874,47,73,0,'2021-04-29 17:38:31','',0.0000000000),(875,47,97,0,'2021-04-29 17:38:31','',0.0000000000),(876,47,95,0,'2021-04-29 17:38:31','',0.0000000000),(877,47,72,0,'2021-04-29 17:38:31','',0.0000000000),(878,47,81,0,'2021-04-29 17:38:31','',0.0000000000),(879,47,69,0,'2021-04-29 17:38:31','',0.0000000000),(880,47,75,0,'2021-04-29 17:38:31','',0.0000000000),(881,47,71,0,'2021-04-29 17:38:31','',0.0000000000),(882,47,70,0,'2021-04-29 17:38:31','',0.0000000000),(883,47,74,1,'2021-04-29 17:38:31','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(884,47,77,0,'2021-04-29 17:38:31','',0.0000000000),(885,48,79,1,'2021-05-06 10:50:10','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(886,48,138,0,'2021-05-06 10:50:10','',0.0000000000),(887,48,107,0,'2021-05-06 10:50:10','',0.0000000000),(888,48,106,0,'2021-05-06 10:50:10','',0.0000000000),(889,48,76,0,'2021-05-06 10:50:10','',0.0000000000),(890,48,98,0,'2021-05-06 10:50:10','',0.0000000000),(891,48,96,0,'2021-05-06 10:50:10','',0.0000000000),(892,48,119,0,'2021-05-06 10:50:10','',0.0000000000),(893,48,118,0,'2021-05-06 10:50:10','',0.0000000000),(894,48,105,0,'2021-05-06 10:50:10','',0.0000000000),(895,48,120,0,'2021-05-06 10:50:10','',0.0000000000),(896,48,121,0,'2021-05-06 10:50:10','',0.0000000000),(897,48,80,0,'2021-05-06 10:50:10','',0.0000000000),(898,48,78,1,'2021-05-06 10:50:10','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(899,48,103,0,'2021-05-06 10:50:10','',0.0000000000),(900,48,73,0,'2021-05-06 10:50:10','',0.0000000000),(901,48,97,0,'2021-05-06 10:50:10','',0.0000000000),(902,48,95,0,'2021-05-06 10:50:10','',0.0000000000),(903,48,72,0,'2021-05-06 10:50:10','',0.0000000000),(904,48,81,0,'2021-05-06 10:50:10','',0.0000000000),(905,48,69,0,'2021-05-06 10:50:10','',0.0000000000),(906,48,75,0,'2021-05-06 10:50:10','',0.0000000000),(907,48,71,0,'2021-05-06 10:50:10','',0.0000000000),(908,48,70,0,'2021-05-06 10:50:10','',0.0000000000),(909,48,74,1,'2021-05-06 10:50:10','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(910,48,77,0,'2021-05-06 10:50:10','',0.0000000000),(911,50,79,1,'2021-05-10 10:47:00','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段\n',0.5000000000),(912,50,138,0,'2021-05-10 10:47:00','',0.0000000000),(913,50,107,0,'2021-05-10 10:47:00','',0.0000000000),(914,50,106,0,'2021-05-10 10:47:00','',0.0000000000),(915,50,76,0,'2021-05-10 10:47:00','',0.0000000000),(916,50,98,0,'2021-05-10 10:47:00','',0.0000000000),(917,50,96,0,'2021-05-10 10:47:00','',0.0000000000),(918,50,119,0,'2021-05-10 10:47:00','',0.0000000000),(919,50,118,0,'2021-05-10 10:47:00','',0.0000000000),(920,50,105,0,'2021-05-10 10:47:00','',0.0000000000),(921,50,120,0,'2021-05-10 10:47:00','',0.0000000000),(922,50,121,0,'2021-05-10 10:47:00','',0.0000000000),(923,50,80,0,'2021-05-10 10:47:00','',0.0000000000),(924,50,78,1,'2021-05-10 10:47:00','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件\n',3.0000000000),(925,50,103,0,'2021-05-10 10:47:00','',0.0000000000),(926,50,73,0,'2021-05-10 10:47:00','',0.0000000000),(927,50,97,0,'2021-05-10 10:47:00','',0.0000000000),(928,50,95,0,'2021-05-10 10:47:00','',0.0000000000),(929,50,72,0,'2021-05-10 10:47:00','',0.0000000000),(930,50,81,0,'2021-05-10 10:47:00','',0.0000000000),(931,50,69,0,'2021-05-10 10:47:00','',0.0000000000),(932,50,75,0,'2021-05-10 10:47:00','',0.0000000000),(933,50,71,0,'2021-05-10 10:47:00','',0.0000000000),(934,50,70,0,'2021-05-10 10:47:00','',0.0000000000),(935,50,74,1,'2021-05-10 10:47:00','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。\n',3.0000000000),(936,50,77,0,'2021-05-10 10:47:00','',0.0000000000);
/*!40000 ALTER TABLE `audit_result` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `audit_rule`
--

DROP TABLE IF EXISTS `audit_rule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `audit_rule` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `user_id` int DEFAULT '-1' COMMENT '创建人 创建人id',
  `create_time` datetime NOT NULL COMMENT '创建时间 创建时间',
  `update_time` datetime NOT NULL COMMENT '更新时间 更新时间',
  `rule_code` varchar(64) NOT NULL COMMENT '规则代码 规则代码',
  `rule_name` varchar(128) NOT NULL COMMENT '规则名称 规则名称',
  `rule_base_type` varchar(32) DEFAULT NULL COMMENT '规则类型 如mysql，oracle等',
  `rule_des` varchar(1024) NOT NULL COMMENT '规则描述/说明 规则说明',
  `rule_advice` varchar(1024) DEFAULT NULL COMMENT '规则建议 规则建议',
  `delete_flag` tinyint NOT NULL DEFAULT '0' COMMENT '删除标志 删除标志0：未删除，1删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='audit_rule 审核规则信息表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `audit_rule`
--

LOCK TABLES `audit_rule` WRITE;
/*!40000 ALTER TABLE `audit_rule` DISABLE KEYS */;
INSERT INTO `audit_rule` VALUES (69,1,'2020-12-02 02:28:11','2021-01-15 08:02:49','COLUMN_TYPE_DIFF','列类型不一致','mysql','列类型不一致','字段类型不匹配会导致隐式转换，可能造成无法使用索引，开发过程中必须严格按照字段类型设置数据值',0),(70,1,'2020-12-02 02:29:21','2021-01-15 08:00:54','DEFAULT_CHARSET','默认字符集','mysql','UTF8字符集','建议表默认字符集设置为utf8或utf8mb4。',0),(71,1,'2020-12-02 02:37:04','2021-01-15 08:01:10','DEFAULT_ENGINE','存储引擎','mysql','存储引擎检查','应使用innodb作为表存储引擎，innodb支持事务，从5.5.5版本开始作为默认存储引擎',0),(72,1,'2020-12-02 02:38:21','2021-01-19 07:53:49','DEPENDENT_SUB_QUERY','依赖子查询','mysql','执行计划包含DEPENDENT SUBQUERY','DEPENDENT SUBQUERY子查询由外层驱动内层查询，内层查询次数取决于外层返回行数，内层查询方式type: ALL、index、range、ref时可能效率很低，应尽量避免使用子查询方式。可考虑使用outer join（注意：8.0.16版本前exists不能使用semi join，只能使用依赖子查询，可考虑改为in并注意null值问题）。',0),(73,1,'2020-12-02 02:41:03','2021-01-21 07:05:05','FORBID_ORDER_BY_RAND','禁止使用order by rand','mysql','禁止使用order by rand','禁止使用order by rand',0),(74,1,'2020-12-02 02:42:18','2021-01-15 01:52:02','FULL_TABLE_SCAN','全表扫描','mysql','全表扫描','全表扫描：全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等。',0),(75,1,'2020-12-02 02:43:04','2021-01-15 08:02:36','INDEX_COLUMN_USE_FUNCTION','索引列使用函数','mysql','索引列使用函数','索引列使用函数：SQL中对索引首列使用函数将导致不能使用索引。MySQL不支持函数索引，5.7.5版本后支持虚拟列及在虚拟列创建索引',0),(76,-1,'2020-12-02 02:44:12','2021-03-03 01:56:37','INDEX_COLUMN_USE_LIKE','like前置匹配','mysql','索引列使用like前置匹配','  对索引首列使用Like前置匹配(like \'%text\') 将导致不能使用索引',0),(77,-1,'2020-12-02 02:45:44','2021-01-15 01:50:07','NO_PRIMARY_KEY','表未设置主键','mysql','表未设置主键','表应设置主键，否则容易造成主从复制延迟问题，无合适列作为主键可设置自增列为主键。',0),(78,-1,'2020-12-02 02:46:31','2021-01-22 07:25:02','NO_WHERE','无查询条件','mysql','未指定where查询条件','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件',0),(79,-1,'2020-12-02 02:47:11','2021-03-24 02:03:15','SELECT_FULL_COLUMN','select* ','mysql','使用select* ','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段',0),(80,-1,'2020-12-02 02:48:30','2021-02-26 03:42:16','TABLE_RELATE_NUM','表关联数量','mysql','表关联数量','表关联数量超过3个，应尽量减少表关联数量',0),(81,-1,'2020-12-02 02:49:28','2021-01-15 08:03:17','USE_COUNT','使用Count','mysql','使用count','在5.7.2-5.7.17版本时由于bug80580导致count()查询不使用二级索引.',0),(82,1,'2021-01-05 02:28:11','2021-01-15 07:51:54','COLUMN_TYPE_DIFF','列类型不一致','rds','列类型不一致','字段类型不匹配会导致隐式转换，可能造成无法使用索引，开发过程中必须严格按照字段类型设置数据值',0),(83,1,'2021-01-05 02:29:21','2021-01-15 03:46:25','DEFAULT_CHARSET','默认字符集','rds','默认字符集检查','字符集需要使用UTF8',0),(84,1,'2021-01-05 02:37:04','2021-01-21 06:37:06','DEFAULT_ENGINE','存储引擎','rds','表存储引擎检查','应使用innodb作为表存储引擎，innodb支持事务，从5.5.5版本开始作为默认存储引擎',0),(85,1,'2021-01-05 02:38:21','2021-01-15 03:48:41','DEPENDENT_SUB_QUERY','依赖子查询','rds','执行计划包含DEPENDENT SUBQUERY','DEPENDENT SUBQUERY子查询由外层驱动内层查询，内层查询次数取决于外层返回行数，内层查询方式type: ALL、index、range、ref时可能效率很低，应尽量避免使用子查询方式。（注意：8.0.16版本前exists不能使用semi join，只能使用依赖子查询，可考虑改为in并注意null值问题）',0),(86,1,'2021-01-05 02:41:03','2021-01-05 02:41:03','FORBID_ORDER_BY_RAND','禁止使用order by rand','rds','禁止使用order by rand','禁止使用order by rand',0),(87,1,'2021-01-05 02:42:18','2021-01-15 03:48:29','FULL_TABLE_SCAN','全表扫描','rds','执行计划存在全表扫描','全表扫描影响SQL性能，DML操作会导致全表锁，如索引缺失根据SQL条件建立合适索引，应尽量避免其他造成索引失效的情况，如索引首列使用函数、索引列使用like前置匹配等',0),(88,1,'2021-01-05 02:43:04','2021-01-15 03:49:34','INDEX_COLUMN_USE_FUNCTION','索引列使用函数','rds','索引列使用函数','索引列使用函数：SQL中对索引首列使用函数将导致不能使用索引。MySQL不支持函数索引，5.7.5版本后支持虚拟列及在虚拟列创建索引',0),(89,-1,'2021-01-05 02:44:12','2021-03-03 01:56:51','INDEX_COLUMN_USE_LIKE','like前置匹配','rds','索引列使用like前置匹配','索引列like前置匹配：对索引首列使用Like前置匹配(like \'%text\') 将导致不能使用索引',0),(90,-1,'2021-01-05 02:45:44','2021-01-15 03:45:42','NO_PRIMARY_KEY','表未设置主键','rds','表未设置主键','表应设置主键，否则容易造成主从复制延迟问题，无合适列作为主键可设置自增列为主键',0),(91,-1,'2021-01-05 02:46:31','2021-01-22 07:25:26','NO_WHERE','无查询条件','rds','未指定where查询条件','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件',0),(92,-1,'2021-01-05 02:47:11','2021-03-24 02:03:06','SELECT_FULL_COLUMN','select*','rds','select*','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段',0),(93,-1,'2021-01-05 02:48:30','2021-02-26 03:51:20','TABLE_RELATE_NUM','表关联数量','rds','表关联数量','表关联数量超过3个，应尽量减少表关联数量',0),(94,-1,'2021-01-05 02:49:28','2021-01-21 06:36:31','USE_COUNT','使用Count()','rds','使用count()','在5.7.2-5.7.17版本时由于bug80580导致count()查询不使用二级索引',0),(95,-1,'2021-01-13 01:55:05','2021-01-21 05:52:03','FOREIGN_KEY_NO_INDEX','外键无索引','mysql','外键无索引','业务设计时不建议使用外键，应从应用层进行约束，如设置外键则必须在外键列上创建索引，否则容易引发锁问题。',0),(96,-1,'2021-01-13 01:59:53','2021-02-26 07:10:08','TABLE_UNION_NUM','表UNION数量','mysql','表union数量','使用过多的uinon all 需考虑业务逻辑是否合理。过多union时，可能会对大量重复数据进行去重操作，影响系统性能。',0),(97,-1,'2021-01-18 08:39:54','2021-01-21 06:32:32','INDEX_SKIP','索引跳跃扫描','mysql','索引跳跃扫描','8.0.13版本功能,为避免全表扫描而使用索引跳跃扫描，请检查索引首列设置是否合理',0),(98,-1,'2021-01-19 02:47:18','2021-02-26 07:20:54','LOW_EFFECTIVE_INDEX','低效索引','mysql','低效索引','使用的索引首列选择度比较低或者每次过滤返回的行数较多，应使用选择性高的列建立索引',0),(99,-1,'2021-01-13 01:55:05','2021-01-21 06:36:16','FOREIGN_KEY_NO_INDEX','外键无索引','rds','外键无索引','业务设计时不建议使用外键，应从应用层进行约束，如设置外键则必须在外键列上创建索引，否则容易引发锁问题。',0),(100,-1,'2021-01-13 01:59:53','2021-02-26 07:10:29','TABLE_UNION_NUM','表UNION数量','rds','表union数量','使用过多的uinon all 需考虑业务逻辑是否合理。过多union时，可能会对大量重复数据进行去重操作，影响系统性能。',0),(101,-1,'2021-01-18 08:39:54','2021-01-21 06:35:51','INDEX_SKIP','索引跳跃扫描','rds','索引跳跃扫描','8.0.13版本功能,为避免全表扫描而使用索引跳跃扫描，请检查索引首列设置是否合',0),(102,-1,'2021-01-19 02:47:18','2021-02-26 07:21:17','LOW_EFFECTIVE_INDEX','低效索引 ','rds','低效索引 ','使用的索引首列选择度比较低或者每次过滤返回的行数较多，应使用选择性高的列建立索引',0),(103,-1,'2021-01-21 08:23:08','2021-01-22 06:42:02','INDEX_FULL_SCAN','索引全扫描','mysql','索引全扫描','不能进行覆盖索引的索引全扫描会进行回表操作造成全表扫描，常见于使用索引列进行排序。检查是否有必要排序，索引设置是否合理，是否使用强制索引。',0),(104,-1,'2021-01-21 08:23:08','2021-01-21 10:37:19','INDEX_FULL_SCAN','索引全扫描','rds','索引全扫描','不能进行覆盖索引的索引全扫描会进行回表操作造成全表扫描，常见于使用索引列进行排序。检查是否有必要排序，索引设置是否合理，是否使用强制索引。',0),(105,-1,'2021-01-25 10:50:50','2021-02-26 04:29:36','SUB_SELECT_NUM','子查询数量','mysql','子查询数量','子查询数量超过1，过多的子查询影响SQL性能',0),(106,-1,'2021-01-26 03:28:43','2021-03-15 02:18:20','SUB_SELECT_DEPTH_NUM','子查询深度','mysql','子查询深度','子查询深度不建议超过1层',0),(107,-1,'2021-01-28 07:29:04','2021-03-15 02:45:26','TABLE_JOIN_SELF','表自关联','mysql','表自关联','表自身关联时应考虑是否能够合并相关条件，降低表关联数量',0),(108,1,'2021-01-05 02:28:11','2021-01-15 07:51:54','DRDS_COLUMN_TYPE_DIFF','列类型不一致','drds','列类型不一致','字段类型不匹配会导致隐式转换，可能造成无法使用索引，开发过程中必须严格按照字段类型设置数据值',0),(109,1,'2021-01-05 02:38:21','2021-02-18 07:43:39','DRDS_DEPENDENT_SUB_QUERY','依赖子查询','drds','执行计划包含DEPENDENT SUBQUERY','DEPENDENT SUBQUERY子查询由外层驱动内层查询，内层查询次数取决于外层返回行数，内层查询方式type: ALL、index、range、ref时可能效率很低，应尽量避免使用子查询方式。（注意：8.0.16版本前exists不能使用semi join，只能使用依赖子查询，可考虑改为in并注意null值问题）',0),(110,1,'2021-01-05 02:42:18','2021-03-01 02:17:45','DRDS_FULL_TABLE_SCAN','全表扫描','drds','执行计划存在全表扫描','DRDS全表扫描时会读取所有分库数据，占用大量内存空间，严重影响系统性能。',0),(111,1,'2021-01-05 02:43:04','2021-02-18 07:43:05','DRDS_INDEX_COLUMN_USE_FUNCTION','索引列使用函数','drds','索引列使用函数','索引列使用函数：SQL中对索引首列使用函数将导致不能使用索引。MySQL不支持函数索引，5.7.5版本后支持虚拟列及在虚拟列创建索引',0),(112,-1,'2021-01-05 02:44:12','2021-03-03 01:56:20','DRDS_INDEX_COLUMN_USE_LIKE','like前置匹配','drds','索引列使用like前置匹配','索引列like前置匹配：对索引首列使用Like前置匹配(like \'%text\') 将导致不能使用索引',0),(113,-1,'2021-01-05 02:46:31','2021-03-15 02:13:26','DRDS_SHARDING_NUM','扫描分库数量','drds','扫描分库的数量比例','避免扫描分库数量过多，否则会引起性能问题',0),(114,-1,'2021-01-05 02:48:30','2021-03-15 07:18:45','DRDS_TABLE_RELATE_NUM','表关联数量','drds','表关联数量','表关联数量超过3个，应尽量减少表关联数量',0),(115,-1,'2021-01-05 02:49:28','2021-02-18 07:42:29','DRDS_NO_SHARDING_KEY','无分库键','drds','无分库键','数据库未指定分库键，分库表必须指定分库键，否则造成严重的性能问题。',0),(116,-1,'2021-01-05 02:46:31','2021-02-18 07:49:39','DRDS_CROSS_DB_JOIN','跨库join','drds','出现跨库join','禁止出现跨库join',1),(117,-1,'2021-01-05 02:49:28','2021-03-24 02:02:57','DRDS_SELECT_FULL_COLUMN','select*','drds','使用select*','select * 使用索引扫描时会进行回表操作返回全列，消耗内存和带宽，降低使用覆盖索引的概率，非必要时尽量避免对表直接使用select *，仅查询需要的字段',0),(118,-1,'2021-02-23 08:12:57','2021-02-26 04:31:20','ASSOCIATION_RELATE','缺少关联条件','mysql','缺少关联条件','N个表关联时，应至少有n-1关联关系，否则会引起笛卡尔积关联，返回过多数据，性能低下',0),(119,-1,'2021-02-23 08:33:00','2021-02-26 06:52:01','INDEX_MERGE','索引合并','mysql','索引合并','index intersect merge对多个索引扫描然后取交集，一般情况是由于索引设计不合理',0),(120,-1,'2021-02-23 08:48:21','2021-02-26 03:45:09','USING_TEMPORARY','使用临时表','mysql','使用临时表','Using temporary，SQL执行过程中产生临时表，临时表位于磁盘时会影响性能,关注Created_tmp_disk_tables统计信息增长情况',0),(121,-1,'2021-02-23 08:57:48','2021-02-26 03:45:02','USING_FILE_SORT','使用排序','mysql','使用排序','Using filesort，SQL执行过程中没有使用索引进行排序，排除过程中可能产生磁盘排序操作会影响性能，关注Sort_merge_passes统计信息增长情况',0),(122,-1,'2021-01-25 10:50:50','2021-02-26 04:29:45','SUB_SELECT_NUM','子查询数量','rds','子查询数量','子查询数量超过1，过多的子查询影响SQL性能',0),(123,-1,'2021-01-26 03:28:43','2021-03-15 02:18:29','SUB_SELECT_DEPTH_NUM','子查询深度','rds','子查询深度','子查询深度不建议超过1层',0),(124,-1,'2021-01-28 07:29:04','2021-03-15 02:45:15','TABLE_JOIN_SELF','表自关联','rds','表自关联','表自身关联时应考虑是否能够合并相关条件，降低表关联数量',0),(125,-1,'2021-02-23 08:12:57','2021-02-26 03:48:50','ASSOCIATION_RELATE','缺少关联条件','rds','缺少关联条件','N个表关联时，应至少有n-1关联关系，否则会引起笛卡尔积关联，返回过多数据，性能低下',0),(126,-1,'2021-02-23 08:33:00','2021-03-01 02:15:36','INDEX_MERGE','索引合并','rds','index intersect merge','index intersect merge对多个索引扫描然后取交集，一般情况是由于索引设计不合理',0),(127,-1,'2021-02-23 08:48:21','2021-02-26 03:48:01','USING_TEMPORARY','使用临时表','rds','使用临时表','Using temporary，SQL执行过程中产生临时表，临时表位于磁盘时会影响性能,关注Created_tmp_disk_tables统计信息增长情况',0),(128,-1,'2021-02-23 08:57:48','2021-02-26 03:47:32','USING_FILE_SORT','使用排序','rds','使用排序','Using filesort，SQL执行过程中没有使用索引进行排序，排除过程中可能产生磁盘排序操作会影响性能，关注Sort_merge_passes统计信息增长情况',0),(129,-1,'2021-02-23 08:33:00','2021-03-01 02:15:44','DRDS_INDEX_MERGE','索引合并','drds','索引合并','index intersect merge对多个索引扫描然后取交集，一般情况是由于索引设计不合理',0),(130,-1,'2021-01-05 02:46:31','2021-01-22 07:25:26','DRDS_NO_WHERE','无查询条件','drds','未指定where查询条件','设置索引列作为where条件，避免全表扫描或DML全表锁，DML时必须设置正确的where条件',0),(131,-1,'2021-01-25 10:50:50','2021-02-26 04:29:45','DRDS_SUB_SELECT_NUM','子查询数量','drds','子查询数量','子查询数量超过1，过多的子查询影响SQL性能',0),(132,-1,'2021-01-26 03:28:43','2021-03-15 02:18:35','DRDS_SUB_SELECT_DEPTH_NUM','子查询深度','drds','子查询深度','子查询深度超过1层，禁止对子查询进行嵌套',0),(133,-1,'2021-02-23 08:48:21','2021-02-26 03:48:01','DRDS_USING_TEMPORARY','使用临时表','drds','使用临时表','Using temporary，SQL执行过程中产生临时表，临时表位于磁盘时会影响性能,关注Created_tmp_disk_tables统计信息增长情况',0),(134,-1,'2021-02-23 08:57:48','2021-02-26 03:47:32','DRDS_USING_FILE_SORT','使用排序','drds','使用排序','Using filesort，SQL执行过程中没有使用索引进行排序，排除过程中可能产生磁盘排序操作会影响性能，关注Sort_merge_passes统计信息增长情况',0),(135,-1,'2021-02-23 08:57:48','2021-02-26 03:47:32','DRDS_SINGLE_TABLE_JOIN','单表join','drds','单表join','单表join不能下推到RDS进行join，影响DRDS的性能，应当避免出现',0),(136,-1,'2021-02-23 08:12:57','2021-02-26 03:48:50','DRDS_ASSOCIATION_RELATE','缺少关联条件','drds','缺少关联条件','N个表关联时，应至少有n-1关联关系，否则会引起笛卡尔积关联，返回过多数据，性能低下',0),(137,-1,'2021-01-28 07:29:04','2021-03-15 02:45:04','DRDS_TABLE_JOIN_SELF','表自关联','drds','表自关联','表自身关联时应考虑是否能够合并相关条件，降低表关联数量',0),(138,-1,'2021-03-23 03:11:28','2021-03-23 03:24:26','NESTED_LOOP','被驱动表低效扫描','mysql','执行计划Extra中出现Using join buffer (Block Nested Loop)','执行计划Extra中出现Using join buffer (Block Nested Loop)，通常由于被驱动表没有好的扫描方式，如全表扫描、大范围索引扫描',0),(139,-1,'2021-03-23 03:11:28','2021-03-23 03:24:47','NESTED_LOOP','被驱动表低效扫描','rds','被驱动表低效扫描','执行计划Extra中出现Using join buffer (Block Nested Loop)，通常由于被驱动表没有好的扫描方式，如全表扫描、大范围索引扫描',0),(140,-1,'2021-04-22 14:33:15','2021-04-25 09:23:56','ORACLE_COLUMN_TYPE_DIFF','列类型不一致','oracle','列类型不一致','非绑定变量条件列值类型与字段类型不一致或进行关联的2个表字段类型不一致，oracle会将不一致类型的字段使用函数进行隐式转换，可能会造成查询条件列不能使用索引。【注: in 列表内的字段类型不一致暂不能识别】',0),(141,-1,'2021-04-22 14:33:15','2021-04-25 02:07:31','ORACLE_FULL_TABLE_SCAN','全表扫描','oracle','执行计划存在全表扫描','    执行计划存在全表扫描TABLE ACCESS FULL，对系统性能影响较大，应尽量避免。\n     (1)检查在查询条件或关联字段上是否具备索引，如索引缺失，应使用过滤性高的字段创建索引(复合作为首字段)\n     (2)查询条件数据范围较大不适合使用索引，则数据库倾向于使用全表扫描\n     (3)存在过滤性较好的索引时，使用强制索引，消除全表扫描\n     (4)如发生全表扫描的SQL确实不需要过滤条件，可忽略该规则',0),(142,-1,'2021-04-22 14:33:16','2021-04-25 09:42:32','ORACLE_INDEX_COLUMN_USE_LIKE','索引列like前置匹配','oracle','索引列使用like前置匹配','索引列like前置匹配：对索引首列使用Like前置匹配(like \'%text\') 将导致不能使用索引',0),(143,-1,'2021-04-22 14:33:16','2021-04-25 02:07:54','ORACLE_INDEX_FULL_SCAN','索引全扫描','oracle','执行计划存在索引全扫描','索引全扫描INDEX FULL SCAN能够保证数据按照索引顺序返回，避免排序操作，但在扫描时使用单块读效率较差，若果存在回表的情况则会使用单块读方式进行全表扫描。\n(1)检查SQL是否有必要进行排序，应尽量避免排序操作。\n(2)检查INDEX FULL SCAN的索引首列是否出现在where条件内，应该根据条件创建或调整索引\n(3)执行计划存在MERGE JOIN且关联的至少一张表中数据量极少，此时可忽略该规则\n(4)DELETE操作的表存在索引全扫描、SQL存在group by操作，可忽略该规则',0),(144,-1,'2021-04-22 14:33:16','2021-04-25 02:08:13','ORACLE_INDEX_SKIP_SCAN','索引跳跃扫描','oracle','执行计划存在索引跳跃扫描','索引跳跃扫描INDEX SKIP SCAN通常由于复合索引索引的首字段没有出现在SQL的过滤条件中而其他列出现在过滤条件，为避免全表扫描而使用索引跳跃扫描，使用的索引首列一般过滤性较差，结合SQL条件使用过滤性高的字段作为首字段创建索引或调整现有索引中字段顺序',0),(145,-1,'2021-04-22 14:33:17','2021-04-25 02:08:36','ORACLE_JOIN_WITH_CARTESIAN','笛卡尔积连接','oracle','执行计划笛卡尔积连接','执行计划存在笛卡尔积MERGE JOIN CARTESIAN，通常由于SQL中的表没有关联或数据库认为该连接方式为最优。\n(1)检查是否存在完全没有关联的表并设置关联条件，对于有N张表关联的SQL，应至少设置n-1个关联条件进行间接关联，如存在间接关联可忽略该规则。\n(2) 检查执行计划中MERGE JOIN CARTESIAN的子节点过滤后是否只返回≤1条数据，一般会使用唯一索引进行访问，若是则忽略该规则 。\n(3) 检查是否使用ORDERED提示强制表关联顺序。',0),(146,-1,'2021-04-22 14:33:17','2021-04-25 02:09:17','ORACLE_MORE_UNION','过多union','oracle','SQL中使用过UNION或UNION ALL超过5个','过多的Union会导致表重复扫描，增加逻辑读，当union的SQL比较类似时，应尽量对uinon进行合并或使用with as提取公共部分数据对SQL进行改写。',0),(147,-1,'2021-04-22 14:33:18','2021-04-25 02:09:40','ORACLE_NO_WHERE','无查询条件','oracle','无查询条件','缺少过滤条件会导致全表扫描发生，影响SQL性能。\n(1)对于count(*)类统计操作，建议使用具有的索引的非空列进行统计，以便能够使用快速索引全扫描/*+index_ffs(table index_name)*/。\n(2)DELETE/UPDATE语句必须使用where设置正确的条件\n(3)如确实不需要过滤条件，可忽略该规则',0),(148,-1,'2021-04-22 14:33:18','2021-04-25 09:22:50','ORACLE_SELECT_FULL_COLUMN','select * ','oracle','select*','使用select * 返回不必要的列会导致回表操作，降低仅扫描索引的可能性，增加内存和网络消耗。',0),(149,-1,'2021-04-22 14:33:19','2021-04-25 09:29:06','ORACLE_TABLE_RELATE_NUM','表关联数量','oracle','表关联数量','表关联数量超过3个，应尽量减少表关联数量',0),(150,-1,'2021-04-22 17:40:54','2021-04-25 09:39:39','ORACLE_SUB_SELECT_DEPTH_NUM','子查询嵌套深度','oracle','子查询深度嵌套','子查询深度不建议超过1层',0),(151,-1,'2021-04-22 17:42:12','2021-04-25 09:40:13','ORACLE_SUB_SELECT_NUM','子查询数量','oracle','子查询数量','子查询数量超过1，过多的子查询影响SQL性能',0),(152,-1,'2021-04-22 17:48:23','2021-04-25 02:12:15','ORACLE_TABLE_JOIN_SELF','表自关联','oracle','表自关联数量超过3个','表自身关联时应考虑是否能够合并相关条件，降低表关联数量',0);
/*!40000 ALTER TABLE `audit_rule` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `audit_rule_attach`
--

DROP TABLE IF EXISTS `audit_rule_attach`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `audit_rule_attach` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `rule_id` int NOT NULL COMMENT '对应的规则id 对应规则id',
  `field_name` varchar(128) DEFAULT NULL COMMENT '字段名称 字段名称',
  `field_value` varchar(128) NOT NULL COMMENT '字段值 字段值',
  `display_name` varchar(64) DEFAULT NULL COMMENT 'ui/中文名称',
  `parent_key` varchar(128) DEFAULT NULL COMMENT '父key，rulecode-dbtype',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=185 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='audit_rule_attach ';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `audit_rule_attach`
--

LOCK TABLES `audit_rule_attach` WRITE;
/*!40000 ALTER TABLE `audit_rule_attach` DISABLE KEYS */;
INSERT INTO `audit_rule_attach` VALUES (81,12,'threshold','3','阈值','TABLE_RELATE_NUM-mysql'),(82,13,'versionStart','5.7.17','版本起始','USE_COUNT-mysql'),(83,13,'versionEnd','5.7.2','结束版本','USE_COUNT-mysql'),(84,1,'score','2','分数','COLUMN_TYPE_DIFF-mysql'),(85,2,'score','1','分数','DEFAULT_CHARSET-mysql'),(86,3,'score','1','分数','DEFAULT_ENGINE-mysql'),(87,4,'score','2','分数','DEPENDENT_SUB_QUERY-mysql'),(88,5,'score','5','分数','FORBID_ORDER_BY_RAND-mysql'),(89,6,'score','3','分数','FULL_TABLE_SCAN-mysql'),(90,7,'score','2','分数','INDEX_COLUMN_USE_FUNCTION-mysql'),(91,8,'score','1','分数','INDEX_COLUMN_USE_LIKE-mysql'),(92,9,'score','1','分数','NO_PRIMARY_KEY-mysql'),(93,10,'score','3','分数','NO_WHERE-mysql'),(94,11,'score','0.5','分数','SELECT_FULL_COLUMN-mysql'),(95,12,'score','2','分数','TABLE_RELATE_NUM-mysql'),(96,13,'score','0','分数','USE_COUNT-mysql'),(97,14,'score','2','分数','COLUMN_TYPE_DIFF-rds'),(98,15,'score','1','分数','DEFAULT_CHARSET-rds'),(99,16,'score','2','分数','DEFAULT_ENGINE-rds'),(100,17,'score','2','分数','DEPENDENT_SUB_QUERY-rds'),(101,18,'score','2','分数','FORBID_ORDER_BY_RAND-rds'),(102,19,'score','3','分数','FULL_TABLE_SCAN-rds'),(103,20,'score','2','分数','INDEX_COLUMN_USE_FUNCTION-rds'),(104,21,'score','2','分数','INDEX_COLUMN_USE_LIKE-rds'),(105,22,'score','1','分数','NO_PRIMARY_KEY-rds'),(106,23,'score','3','分数','NO_WHERE-rds'),(107,24,'score','2','分数','SELECT_FULL_COLUMN-rds'),(108,25,'score','2','分数','TABLE_RELATE_NUM-rds'),(109,26,'score','0','分数','USE_COUNT-rds'),(110,27,'score','2','分数','FOREIGN_KEY_NO_INDEX-mysql'),(111,28,'score','1','分数','TABLE_UNION_NUM-mysql'),(112,29,'score','1','分数','INDEX_SKIP-mysql'),(113,30,'score','1','分数','LOW_EFFECTIVE_INDEX-mysql'),(114,30,'uniqueNum','10','唯一值数','LOW_EFFECTIVE_INDEX-mysql'),(115,30,'avgRow','9999','平均行数','LOW_EFFECTIVE_INDEX-mysql'),(116,31,'score','2','分数','FOREIGN_KEY_NO_INDEX-rds'),(117,32,'score','1','分数','TABLE_UNION_NUM-rds'),(118,33,'score','1','分数','INDEX_SKIP-rds'),(119,34,'score','1','分数','LOW_EFFECTIVE_INDEX-rds'),(120,34,'uniqueNum','10','唯一值数','LOW_EFFECTIVE_INDEX-rds'),(121,34,'avgRow','9999','平均行数','LOW_EFFECTIVE_INDEX-rds'),(122,25,'threshold','3','阈值','TABLE_RELATE_NUM-rds'),(123,35,'score','2','分数','INDEX_FULL_SCAN-mysql'),(124,36,'score','2','分数','INDEX_FULL_SCAN-rds'),(125,37,'score','2','分数','SUB_SELECT_NUM-mysql'),(126,37,'threshold','1','阈值','SUB_SELECT_NUM-mysql'),(127,38,'score','2','分数','SUB_SELECT_DEPTH_NUM-mysql'),(128,38,'threshold','1','阈值','SUB_SELECT_DEPTH_NUM-mysql'),(129,39,'score','1','分数','TABLE_JOIN_SELF-mysql'),(130,40,'score','2','分数','DRDS_COLUMN_TYPE_DIFF-drds'),(131,41,'score','2','分数','DRDS_DEPENDENT_SUB_QUERY-drds'),(132,42,'score','3','分数','DRDS_FULL_TABLE_SCAN-drds'),(133,43,'score','2','分数','DRDS_INDEX_COLUMN_USE_FUNCTION-drds'),(134,44,'score','1','分数','DRDS_INDEX_COLUMN_USE_LIKE-drds'),(135,45,'score','3','分数','DRDS_SHARDING_NUM-drds'),(136,46,'score','2','分数','DRDS_TABLE_RELATE_NUM-drds'),(137,47,'score','3','分数','DRDS_NO_SHARDING_KEY-drds'),(138,48,'score','3','分数','DRDS_CROSS_DB_JOIN-drds'),(139,49,'score','0.5','分数','DRDS_SELECT_FULL_COLUMN-drds'),(140,45,'threshold','50','阈值(百分比)','DRDS_SHARDING_NUM-drds'),(141,46,'threshold','3','阈值','DRDS_TABLE_RELATE_NUM-drds'),(142,50,'score','2','分数','ASSOCIATION_RELATE-mysql'),(143,51,'score','0.5','分数','INDEX_MERGE-mysql'),(144,52,'score','0.5','分数','USING_TEMPORARY-mysql'),(145,53,'score','0.5','分数','USING_FILE_SORT-mysql'),(146,54,'score','2','分数','SUB_SELECT_NUM-rds'),(147,54,'threshold','1','阈值','SUB_SELECT_NUM-rds'),(148,55,'score','2','分数','SUB_SELECT_DEPTH_NUM-rds'),(149,55,'threshold','1','阈值','SUB_SELECT_DEPTH_NUM-rds'),(150,56,'score','2','分数','TABLE_JOIN_SELF-rds'),(151,57,'score','2','分数','ASSOCIATION_RELATE-rds'),(152,58,'score','0.5','分数','INDEX_MERGE-rds'),(153,59,'score','0.5','分数','USING_TEMPORARY-rds'),(154,60,'score','0.5','分数','USING_FILE_SORT-rds'),(155,63,'score','2','分数','DRDS_SUB_SELECT_NUM-drds'),(156,63,'threshold','1','阈值','DRDS_SUB_SELECT_NUM-drds'),(157,64,'score','2','分数','DRDS_SUB_SELECT_DEPTH_NUM-drds'),(158,64,'threshold','1','阈值','DRDS_SUB_SELECT_DEPTH_NUM-drds'),(159,62,'score','3','分数','DRDS_NO_WHERE-drds'),(160,61,'score','0.5','分数','DRDS_INDEX_MERGE-drds'),(161,65,'score','0.5','分数','DRDS_USING_TEMPORARY-drds'),(162,66,'score','0.5','分数','DRDS_USING_FILE_SORT-drds'),(163,67,'score','3','分数','DRDS_SINGLE_TABLE_JOIN-drds'),(164,68,'score','2','分数','DRDS_ASSOCIATION_RELATE-drds'),(165,69,'score','1','分数','DRDS_TABLE_JOIN_SELF-drds'),(166,70,'score','0.5','分数','NESTED_LOOP-mysql'),(167,71,'score','0.5','分数','NESTED_LOOP-rds'),(168,78,'score','2','分数','ORACLE_COLUMN_TYPE_DIFF-oracle'),(169,79,'score','2','分数','ORACLE_FULL_TABLE_SCAN-oracle'),(170,80,'score','1','分数','ORACLE_INDEX_COLUMN_USE_LIKE-oracle'),(171,81,'score','1','分数','ORACLE_INDEX_FULL_SCAN-oracle'),(172,82,'score','0.5','分数','ORACLE_INDEX_SKIP_SCAN-oracle'),(173,83,'score','2','分数','ORACLE_JOIN_WITH_CARTESIAN-oracle'),(174,84,'score','0.5','分数','ORACLE_MORE_UNION-oracle'),(175,84,'threshold','5','阈值','ORACLE_MORE_UNION-oracle'),(176,85,'score','2','分数','ORACLE_NO_WHERE-oracle'),(177,86,'score','0.5','分数','ORACLE_SELECT_FULL_COLUMN-oracle'),(178,87,'score','2','分数','ORACLE_TABLE_RELATE_NUM-oracle'),(179,87,'threshold','2','阈值','ORACLE_TABLE_RELATE_NUM-oracle'),(180,150,'score','2','分数','ORACLE_SUB_SELECT_DEPTH_NUM-oracle'),(181,150,'threshold','0','阈值','ORACLE_SUB_SELECT_DEPTH_NUM-oracle'),(182,151,'score','2','分数','ORACLE_SUB_SELECT_NUM-oracle'),(183,151,'threshold','0','阈值','ORACLE_SUB_SELECT_NUM-oracle'),(184,152,'score','1','分数','ORACLE_TABLE_JOIN_SELF-oracle');
/*!40000 ALTER TABLE `audit_rule_attach` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `audit_sql`
--

DROP TABLE IF EXISTS `audit_sql`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `audit_sql` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `user_id` int NOT NULL COMMENT '提交人id 提交人id',
  `audit_sql` text NOT NULL COMMENT 'sql语句 sql语句',
  `db_type` varchar(32) DEFAULT NULL COMMENT '数据库类型 MySql\nOracle\nDrds',
  `create_time` datetime NOT NULL COMMENT '创建时间 创建时间',
  `update_time` datetime NOT NULL COMMENT '更新时间 更新时间',
  `status` tinyint NOT NULL DEFAULT '0' COMMENT '状态 状态（0：待审核；1.已审核；2.审核出错）',
  `delete_flag` tinyint NOT NULL DEFAULT '0' COMMENT '删除标志 删除标志（0：未删除，1:已删除）',
  `database_id` int NOT NULL COMMENT '对应的数据库id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='audit-sql 存储提交的sql语句';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `audit_sql`
--

LOCK TABLES `audit_sql` WRITE;
/*!40000 ALTER TABLE `audit_sql` DISABLE KEYS */;
INSERT INTO `audit_sql` VALUES (1,2,'select * from user','mysql','2021-04-25 17:51:38','2021-04-25 17:51:38',0,0,1),(2,2,'select\n  *\nfrom\n  user','mysql','2021-04-25 17:52:14','2021-04-25 17:52:14',0,0,1),(3,2,'select\n  *\nfrom\n  user','mysql','2021-04-25 17:53:17','2021-04-25 17:53:17',0,0,1),(4,2,'select\n  *\nfrom\n  user','mysql','2021-04-25 17:55:52','2021-04-25 17:55:52',0,0,1),(5,2,'select\n  *\nfrom\n  user','mysql','2021-04-25 18:10:57','2021-04-25 18:10:57',0,0,1),(6,2,'select\n  *\nfrom\n  test.user','mysql','2021-04-25 18:15:12','2021-04-25 18:15:12',0,0,1),(7,2,'select\n  *\nfrom\n  test.user','mysql','2021-04-25 18:18:44','2021-04-25 18:18:44',0,0,1),(8,2,'select\n  *\nfrom\n  test.user','mysql','2021-04-25 18:20:28','2021-04-25 18:20:28',0,0,1),(9,2,'select\n  *\nfrom\n  test.user','mysql','2021-04-25 18:23:35','2021-04-25 18:23:35',0,0,1),(10,2,'select * from user','mysql','2021-04-26 11:47:02','2021-04-26 11:47:02',1,0,1),(11,2,'select * from user','mysql','2021-04-26 11:58:15','2021-04-26 11:58:15',1,0,1),(12,2,'select * from user','mysql','2021-04-26 16:16:28','2021-04-26 16:16:28',1,0,1),(13,2,'select * from user','mysql','2021-04-29 15:05:38','2021-04-29 15:05:38',0,0,1),(14,2,'select * from user','mysql','2021-04-29 15:06:49','2021-04-29 15:06:49',0,0,1),(15,2,'select * from user','mysql','2021-04-29 15:08:07','2021-04-29 15:08:07',0,0,1),(16,2,'select * from user','mysql','2021-04-29 15:10:14','2021-04-29 15:10:14',1,0,1),(17,2,'select * from user','mysql','2021-04-29 15:10:43','2021-04-29 15:10:43',1,0,1),(18,2,'select * from user','mysql','2021-04-29 15:13:35','2021-04-29 15:13:35',1,0,1),(19,2,'select * from user','mysql','2021-04-29 15:17:30','2021-04-29 15:17:30',1,0,1),(20,2,'select * from user','mysql','2021-04-29 15:21:04','2021-04-29 15:21:04',1,0,1),(21,2,'select * from user','mysql','2021-04-29 15:22:29','2021-04-29 15:22:29',1,0,1),(22,2,'select * from user','mysql','2021-04-29 15:33:18','2021-04-29 15:33:18',1,0,1),(23,2,'select * from user','mysql','2021-04-29 15:34:26','2021-04-29 15:34:26',1,0,1),(24,2,'select * from user','mysql','2021-04-29 15:40:16','2021-04-29 15:40:16',1,0,1),(25,2,'select * from user','mysql','2021-04-29 15:58:52','2021-04-29 15:58:52',1,0,1),(26,2,'select * from user','mysql','2021-04-29 15:59:57','2021-04-29 15:59:57',1,0,1),(27,2,'select * from user','mysql','2021-04-29 16:02:59','2021-04-29 16:02:59',1,0,1),(28,2,'select * from user','mysql','2021-04-29 16:06:27','2021-04-29 16:06:27',1,0,1),(29,2,'select * from user','mysql','2021-04-29 16:07:25','2021-04-29 16:07:25',1,0,1),(30,2,'select * from user','mysql','2021-04-29 16:13:17','2021-04-29 16:13:17',1,0,1),(31,2,'select * from user','mysql','2021-04-29 16:13:43','2021-04-29 16:13:43',1,0,1),(32,2,'select * from user','mysql','2021-04-29 16:22:15','2021-04-29 16:22:15',1,0,1),(33,2,'select * from user','mysql','2021-04-29 16:26:12','2021-04-29 16:26:12',1,0,1),(34,2,'select * from user','mysql','2021-04-29 16:33:12','2021-04-29 16:33:12',1,0,1),(35,2,'select * from user','mysql','2021-04-29 16:35:19','2021-04-29 16:35:19',1,0,1),(36,2,'select * from user','mysql','2021-04-29 16:40:17','2021-04-29 16:40:17',1,0,1),(37,2,'select * from user','mysql','2021-04-29 17:10:36','2021-04-29 17:10:36',1,0,1),(38,2,'select * from user','mysql','2021-04-29 17:13:09','2021-04-29 17:13:09',1,0,1),(39,2,'select * from user','mysql','2021-04-29 17:14:01','2021-04-29 17:14:01',1,0,1),(40,2,'select * from user','mysql','2021-04-29 17:14:29','2021-04-29 17:14:29',1,0,1),(41,2,'select * from user','mysql','2021-04-29 17:16:12','2021-04-29 17:16:12',1,0,1),(42,2,'select * from user','mysql','2021-04-29 17:17:03','2021-04-29 17:17:03',1,0,1),(43,2,'select * from user','mysql','2021-04-29 17:27:05','2021-04-29 17:27:05',1,0,1),(44,2,'select * from user','mysql','2021-04-29 17:28:42','2021-04-29 17:28:42',1,0,1),(45,2,'select * from user','mysql','2021-04-29 17:30:36','2021-04-29 17:30:36',1,0,1),(46,2,'select * from user','mysql','2021-04-29 17:31:35','2021-04-29 17:31:35',1,0,1),(47,2,'select * from user','mysql','2021-04-29 17:38:31','2021-04-29 17:38:31',1,0,1),(48,2,'select * from user','mysql','2021-05-06 10:50:10','2021-05-06 10:50:10',1,0,1),(49,2,'select * from user','mysql','2021-05-10 10:44:24','2021-05-10 10:44:24',2,0,1),(50,2,'select * from user','mysql','2021-05-10 10:47:01','2021-05-10 10:47:01',1,0,1);
/*!40000 ALTER TABLE `audit_sql` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `database_depart_relate`
--

DROP TABLE IF EXISTS `database_depart_relate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `database_depart_relate` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `db_id` int DEFAULT NULL COMMENT '数据库id',
  `dep_id` varchar(128) DEFAULT NULL COMMENT '部门id',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='数据库与部门关系表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `database_depart_relate`
--

LOCK TABLES `database_depart_relate` WRITE;
/*!40000 ALTER TABLE `database_depart_relate` DISABLE KEYS */;
/*!40000 ALTER TABLE `database_depart_relate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `database_info`
--

DROP TABLE IF EXISTS `database_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `database_info` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int NOT NULL COMMENT '创建人',
  `database_type` varchar(32) DEFAULT NULL COMMENT '数据库类型 mysql,oracle等',
  `database_ip` varchar(15) DEFAULT NULL COMMENT '数据库ip',
  `database_port` int DEFAULT NULL COMMENT '数据库端口',
  `database_url` varchar(512) DEFAULT NULL COMMENT '数据库url',
  `test_flag` tinyint NOT NULL DEFAULT '1' COMMENT '测试标示 0测试，1未测试',
  `database_name` varchar(128) DEFAULT NULL COMMENT '数据库名称 数据库名称',
  `database_alias` varchar(128) DEFAULT NULL COMMENT '数据库别名 数据库别名',
  `database_remark` varchar(512) DEFAULT NULL COMMENT '数据库说明 数据库',
  `user_name` varchar(64) DEFAULT NULL COMMENT '用户名 用户名',
  `user_password` varchar(128) DEFAULT NULL COMMENT '用户密码 加密后的密码',
  `delete_flag` tinyint NOT NULL DEFAULT '0' COMMENT '删除标示 0未删除，1已删除',
  `create_time` datetime DEFAULT NULL,
  `update_time` datetime DEFAULT NULL,
  `share_flag` int DEFAULT '0' COMMENT '数据库共享标志。0:不共享;1:共享',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='database_info 数据库信息表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `database_info`
--

LOCK TABLES `database_info` WRITE;
/*!40000 ALTER TABLE `database_info` DISABLE KEYS */;
INSERT INTO `database_info` VALUES (1,2,'mysql','10.253.9.213',33306,'jdbc:mysql://10.253.9.213:33306/test',1,'test','测试库',NULL,'root','MG1lqxwZniuJmeSSqitFLw==',0,'2021-04-25 17:51:16','2021-05-10 10:46:45',0);
/*!40000 ALTER TABLE `database_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `dictionary_info`
--

DROP TABLE IF EXISTS `dictionary_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `dictionary_info` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int DEFAULT '-1' COMMENT '创建人',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `code` varchar(64) NOT NULL COMMENT '字典编码',
  `group_code` varchar(64) NOT NULL COMMENT '字典组',
  `content` varchar(1024) NOT NULL COMMENT '字典内容',
  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
  `delete_flag` tinyint NOT NULL DEFAULT '0' COMMENT '删除标志0：为删除，1：删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='dictionary_info 字典表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `dictionary_info`
--

LOCK TABLES `dictionary_info` WRITE;
/*!40000 ALTER TABLE `dictionary_info` DISABLE KEYS */;
INSERT INTO `dictionary_info` VALUES (1,-1,'2021-03-11 11:10:42','CLEAR_INFO','NOTICE_INFO','审核结果会定期清理，如有需要请自行保存','2021-03-11 11:11:07',0),(2,-1,'2021-04-22 14:41:59','SPLIT_CHAR','NOTICE_INFO','多个sql语句使用【英文】标点”|;“分隔','2021-04-22 14:43:42',0),(3,-1,'2021-04-23 01:28:14','BATCH_LIMIT','BATCH_MANAGER','10','2021-04-23 01:28:19',0);
/*!40000 ALTER TABLE `dictionary_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sql_explain`
--

DROP TABLE IF EXISTS `sql_explain`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sql_explain` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `create_time` datetime NOT NULL COMMENT '创建时间 写入时间',
  `content` text NOT NULL COMMENT '执行计划内容 执行计划',
  `ok_flag` tinyint NOT NULL DEFAULT '0' COMMENT '是否正常 0:正常，1错误',
  `sql_id` int NOT NULL COMMENT '对应的sqlid 关联的sqlID',
  `db_version` varchar(100) DEFAULT NULL COMMENT '数据库版本',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='sql_explain 执行计划表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sql_explain`
--

LOCK TABLES `sql_explain` WRITE;
/*!40000 ALTER TABLE `sql_explain` DISABLE KEYS */;
INSERT INTO `sql_explain` VALUES (1,'2021-04-26 11:47:01','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,10,'8.0.23'),(2,'2021-04-26 11:58:15','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,11,'8.0.23'),(3,'2021-04-26 16:16:27','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,12,'8.0.23'),(4,'2021-04-29 15:10:13','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,16,'8.0.23'),(5,'2021-04-29 15:10:43','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,17,'8.0.23'),(6,'2021-04-29 15:13:34','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,18,'8.0.23'),(7,'2021-04-29 15:17:29','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,19,'8.0.23'),(8,'2021-04-29 15:21:03','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,20,'8.0.23'),(9,'2021-04-29 15:22:29','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,21,'8.0.23'),(10,'2021-04-29 15:33:17','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,22,'8.0.23'),(11,'2021-04-29 15:34:25','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,23,'8.0.23'),(12,'2021-04-29 15:40:16','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,24,'8.0.23'),(13,'2021-04-29 15:58:52','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,25,'8.0.23'),(14,'2021-04-29 15:59:57','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,26,'8.0.23'),(15,'2021-04-29 16:02:59','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,27,'8.0.23'),(16,'2021-04-29 16:06:27','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,28,'8.0.23'),(17,'2021-04-29 16:07:24','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,29,'8.0.23'),(18,'2021-04-29 16:13:17','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,30,'8.0.23'),(19,'2021-04-29 16:13:42','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,31,'8.0.23'),(20,'2021-04-29 16:22:15','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,32,'8.0.23'),(21,'2021-04-29 16:26:12','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,33,'8.0.23'),(22,'2021-04-29 16:33:12','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,34,'8.0.23'),(23,'2021-04-29 16:35:18','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,35,'8.0.23'),(24,'2021-04-29 16:40:17','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,36,'8.0.23'),(25,'2021-04-29 17:10:36','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,37,'8.0.23'),(26,'2021-04-29 17:13:09','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,38,'8.0.23'),(27,'2021-04-29 17:14:01','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,39,'8.0.23'),(28,'2021-04-29 17:14:28','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,40,'8.0.23'),(29,'2021-04-29 17:16:11','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,41,'8.0.23'),(30,'2021-04-29 17:17:03','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,42,'8.0.23'),(31,'2021-04-29 17:27:04','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,43,'8.0.23'),(32,'2021-04-29 17:28:41','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,44,'8.0.23'),(33,'2021-04-29 17:30:36','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,45,'8.0.23'),(34,'2021-04-29 17:31:35','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,46,'8.0.23'),(35,'2021-04-29 17:38:31','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,47,'8.0.23'),(36,'2021-05-06 10:50:09','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,48,'8.0.23'),(37,'2021-05-10 10:44:22','获取执行计划或表信息失败',1,49,NULL),(38,'2021-05-10 10:47:00','--------------------------------------------------------------------\r\n|id|select_type|table|type|possible_keys|key|key_len|ref|rows|Extra|\r\n--------------------------------------------------------------------\r\n|1 |SIMPLE     |user |ALL |             |   |0      |   |1   |     |\r\n--------------------------------------------------------------------\r\n',0,50,'8.0.23');
/*!40000 ALTER TABLE `sql_explain` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `table_index_info`
--

DROP TABLE IF EXISTS `table_index_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `table_index_info` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id id',
  `sql_id` int NOT NULL COMMENT 'sqlid audit_sql表对应id',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间 写入日期',
  `index_flag` tinyint DEFAULT NULL COMMENT '索引信息标志 索引信息标志，0正常，1错误',
  `index_info` text COMMENT '索引信息 索引信息，如果标志为错误，则为错误信息',
  `table_flag` tinyint DEFAULT NULL COMMENT '表信息标志 表信是否正常，0正常，1错误',
  `table_info` text COMMENT '表信息 表信息，如果表错误则为错误信息',
  PRIMARY KEY (`id`),
  KEY `table_index_info__index_sql_id` (`sql_id`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='存储建表语句与索引信息';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `table_index_info`
--

LOCK TABLES `table_index_info` WRITE;
/*!40000 ALTER TABLE `table_index_info` DISABLE KEYS */;
INSERT INTO `table_index_info` VALUES (1,4,'2021-04-25 17:55:53',1,NULL,1,NULL),(2,5,'2021-04-25 18:10:57',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(3,6,'2021-04-25 18:15:12',1,NULL,1,NULL),(4,7,'2021-04-25 18:18:44',1,NULL,1,NULL),(5,8,'2021-04-25 18:23:28',1,NULL,1,NULL),(6,10,'2021-04-26 11:47:02',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(7,11,'2021-04-26 11:58:15',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(8,12,'2021-04-26 16:16:28',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(9,14,'2021-04-29 15:06:55',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(10,14,'2021-04-29 15:06:55',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(11,15,'2021-04-29 15:08:07',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(12,15,'2021-04-29 15:08:07',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(13,16,'2021-04-29 15:10:14',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(14,17,'2021-04-29 15:10:43',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(15,18,'2021-04-29 15:13:35',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(16,19,'2021-04-29 15:17:30',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(17,20,'2021-04-29 15:21:04',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(18,21,'2021-04-29 15:22:29',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(19,22,'2021-04-29 15:33:18',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(20,23,'2021-04-29 15:34:26',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(21,24,'2021-04-29 15:40:17',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(22,25,'2021-04-29 15:58:52',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(23,26,'2021-04-29 15:59:57',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(24,27,'2021-04-29 16:03:00',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(25,28,'2021-04-29 16:06:27',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(26,29,'2021-04-29 16:07:25',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(27,30,'2021-04-29 16:13:17',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(28,31,'2021-04-29 16:13:43',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(29,32,'2021-04-29 16:22:15',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(30,33,'2021-04-29 16:26:12',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(31,34,'2021-04-29 16:33:13',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(32,35,'2021-04-29 16:35:19',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(33,36,'2021-04-29 16:40:17',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(34,37,'2021-04-29 17:10:36',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(35,38,'2021-04-29 17:13:09',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(36,39,'2021-04-29 17:14:01',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(37,40,'2021-04-29 17:14:29',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(38,41,'2021-04-29 17:16:12',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(39,42,'2021-04-29 17:17:04',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(40,43,'2021-04-29 17:27:05',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(41,44,'2021-04-29 17:28:42',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(42,45,'2021-04-29 17:30:36',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(43,46,'2021-04-29 17:31:35',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(44,47,'2021-04-29 17:38:31',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(45,48,'2021-05-06 10:50:10',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}'),(46,50,'2021-05-10 10:47:02',0,'{\"user\":{\"databaseType\":\"MYSQL\",\"tableName\":\"user\",\"titles\":[\"Table\",\"Non_unique\",\"Key_name\",\"Seq_in_index\",\"Column_name\",\"Collation\",\"Cardinality\",\"Sub_part\",\"Packed\",\"Null\",\"Index_type\",\"Comment\",\"Index_comment\",\"Visible\",\"Expression\"],\"okFlag\":true,\"msg\":null,\"elements\":[{\"table\":\"user\",\"keyName\":\"PRIMARY\",\"seqInIndex\":1,\"columnName\":\"id\",\"collation\":\"A\",\"cardinality\":0,\"subPart\":0,\"packed\":null,\"nullFlag\":\"\",\"indexType\":\"BTREE\",\"comment\":\"\",\"indexComment\":\"\",\"visible\":\"YES\",\"expression\":null,\"nonUnique\":0}]}}',0,'{\"user\":\"CREATE TABLE `user` (\\n  `id` int NOT NULL AUTO_INCREMENT,\\n  `name` varchar(255) DEFAULT NULL,\\n  `sex` int DEFAULT NULL,\\n  PRIMARY KEY (`id`)\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\"}');
/*!40000 ALTER TABLE `table_index_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_depart_relate`
--

DROP TABLE IF EXISTS `user_depart_relate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user_depart_relate` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `user_id` int DEFAULT NULL COMMENT '用户id',
  `dep_id` varchar(128) DEFAULT NULL COMMENT '部门id(天眼给出的)',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='用户部门关系表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_depart_relate`
--

LOCK TABLES `user_depart_relate` WRITE;
/*!40000 ALTER TABLE `user_depart_relate` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_depart_relate` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_department`
--

DROP TABLE IF EXISTS `user_department`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user_department` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT 'id',
  `depart_id` varchar(128) DEFAULT NULL COMMENT '部门id 部门id',
  `depart_name` varchar(128) DEFAULT NULL COMMENT '部门名称 部门名称',
  `remark` varchar(1024) DEFAULT NULL COMMENT '备注 备注',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间 创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='部门表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_department`
--

LOCK TABLES `user_department` WRITE;
/*!40000 ALTER TABLE `user_department` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_department` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'smart_sql'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-05-10 11:24:12
